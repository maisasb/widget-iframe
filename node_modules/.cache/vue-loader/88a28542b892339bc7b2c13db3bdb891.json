{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/track/workplace/a2/frontend/widget/src/components/survey/Nps.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/components/survey/Nps.vue","mtime":1620908067435},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBRdWVzdGlvbkNvbnRhaW5lciBmcm9tICcuL1F1ZXN0aW9uQ29udGFpbmVyJwppbXBvcnQgQnV0dG9uUXVlc3Rpb24gZnJvbSAnLi9CdXR0b25RdWVzdGlvbkNvbXBvbmVudCcKaW1wb3J0IFN1cnZleVVzZUNhc2UgZnJvbSAnLi4vLi4vYXJjaC9zdXJ2ZXkvdXNlY2FzZScKY29uc3Qgc3VydmV5VXNlQ2FzZSA9IG5ldyBTdXJ2ZXlVc2VDYXNlKCkKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IEJ1dHRvblF1ZXN0aW9uLCBRdWVzdGlvbkNvbnRhaW5lciB9LAogIHByb3BzOiB7CiAgICBzZWxlY3RlZFF1ZXN0aW9uOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgIH0sCiAgICBsYW5nOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ3B0X0JSJywKICAgIH0sCiAgICBucHNfdHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICB9LAogICAgb25TZWxlY3RBbnN3ZXI6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6ICgpID0+IHt9LAogICAgfSwKICAgIGNvbG9yOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgIH0sCiAgICBzdGF0dXM6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAxLAogICAgfSwKICAgIGN1cnJlbnRBbnN3ZXI6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgfSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb21tZW50OiAnJywKICAgICAgYW5zd2VyOiAnJywKICAgICAgcnVsZXM6IHsKICAgICAgICBtYXg6IHYgPT4gdi5sZW5ndGggPD0gNTAwMCB8fCB0aGlzLiR0KCdnZW5lcmFsLnJ1bGVzLm1heF9sZW5ndGgnKSArICcgNTAwMCcsCiAgICAgIH0sCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgcGxhY2Vob2xkZXIoKSB7CiAgICAgIHJldHVybiBzdXJ2ZXlVc2VDYXNlLmdldENvbW1lbnRQbGFjZWhvbGRlcih0aGlzLmxhbmcpCiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgc2VsZWN0SXRlbSgpIHsKICAgICAgY29uc3QgcmVzcG9uc2UgPSB7CiAgICAgICAgdXVpZDogdGhpcy5zZWxlY3RlZFF1ZXN0aW9uLml0ZW1fdXVpZCwKICAgICAgICB0eXBlOiB0aGlzLnNlbGVjdGVkUXVlc3Rpb24udHlwZSwKICAgICAgICBhbnN3ZXI6IHsKICAgICAgICAgIHJlc3BvbnNlOiB0aGlzLmFuc3dlciwKICAgICAgICAgIGNvbW1lbnQ6IHRoaXMuY29tbWVudCwKICAgICAgICB9LAogICAgICB9CgogICAgICB0aGlzLm9uU2VsZWN0QW5zd2VyKHJlc3BvbnNlKQogICAgfSwKICAgIGNoZWNrRGV0cmFjdG9yQW5zd2VyKCkgewogICAgICBpZiAodGhpcy5hbnN3ZXIgPT09ICcnKSB7CiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgY29uc3QgYW5zd2VyTnVtYmVyID0gTnVtYmVyKHRoaXMuYW5zd2VyKQogICAgICBpZiAoYW5zd2VyTnVtYmVyID09PSAxMCB8fCBhbnN3ZXJOdW1iZXIgPT09IDkpIHsKICAgICAgICByZXR1cm4gJ3Byb21vdGVyJwogICAgICB9IGVsc2UgaWYgKGFuc3dlck51bWJlciA9PT0gNyB8fCBhbnN3ZXJOdW1iZXIgPT09IDgpIHsKICAgICAgICByZXR1cm4gJ25ldXRyYWwnCiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuICdkZXRyYWN0b3InCiAgICAgIH0KICAgIH0sCiAgICBzZWxlY3RBbnN3ZXIoaXRlbSkgewogICAgICB0aGlzLmFuc3dlciA9IGl0ZW0KICAgICAgdGhpcy5zZWxlY3RJdGVtKGl0ZW0pCiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLmN1cnJlbnRBbnN3ZXI/LmFuc3dlcj8uY29tbWVudCkgewogICAgICB0aGlzLmNvbW1lbnQgPSB0aGlzLmN1cnJlbnRBbnN3ZXIuYW5zd2VyLmNvbW1lbnQKICAgIH0KICAgIGlmICh0aGlzLmN1cnJlbnRBbnN3ZXI/LmFuc3dlcj8ucmVzcG9uc2UgIT0gbnVsbCkgewogICAgICB0aGlzLmFuc3dlciA9IE51bWJlcih0aGlzLmN1cnJlbnRBbnN3ZXIuYW5zd2VyLnJlc3BvbnNlKQogICAgfQogICAgLy8gdGhpcy4kd2F0Y2goJ2NvbW1lbnQnLCAoKSA9PiB0aGlzLnNlbGVjdEl0ZW0odGhpcy5hbnN3ZXIpKQogIH0sCn0K"},{"version":3,"sources":["Nps.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Nps.vue","sourceRoot":"src/components/survey","sourcesContent":["<template>\n  <QuestionContainer\n    :status=\"status\"\n    :questionText=\"selectedQuestion.question[lang]\"\n    :isObligatory=\"selectedQuestion.is_obligatory\"\n    :color=\"color\"\n  >\n    <template v-slot:buttons>\n      <div>\n        <button-question\n          :questionType=\"selectedQuestion.type\"\n          :scale_type=\"0\"\n          :min_scale=\"0\"\n          :max_scale=\"10\"\n          :button_design=\"selectedQuestion.button_design\"\n          :color_pattern=\"selectedQuestion.color_pattern\"\n          :reverse=\"selectedQuestion.inverted_scale\"\n          :custom_color=\"selectedQuestion.custom_color\"\n          :onClick=\"item => selectAnswer(item)\"\n          :current_response=\"currentAnswer ? currentAnswer.answer.response : null\"\n          :language=\"lang\"\n        />\n      </div>\n    </template>\n    <template v-slot:comment>\n      <div v-if=\"selectedQuestion.comments_enabled\">\n        <!-- Detractor question -->\n        <div v-show=\"checkDetractorAnswer() === 'detractor'\" class=\"subtitle\">\n          <div\n            v-if=\"\n              selectedQuestion.detractor_comment_question !== undefined &&\n                selectedQuestion.detractor_comment_question[lang] !== ''\n            \"\n          >\n            {{ selectedQuestion.detractor_comment_question[lang] }}\n          </div>\n          <input\n            v-model=\"comment\"\n            autogrow\n            :placeholder=\"placeholder\"\n            class=\"survey-input\"\n            :rules=\"[rules.max]\"\n            @blur=\"selectItem(answer)\"\n          />\n        </div>\n\n        <!-- Neutral question -->\n        <div v-show=\"checkDetractorAnswer() === 'neutral'\" class=\"subtitle\">\n          <div\n            v-if=\"\n              selectedQuestion.neutral_comment_question !== undefined &&\n                selectedQuestion.neutral_comment_question[lang] !== ''\n            \"\n          >\n            {{ selectedQuestion.neutral_comment_question[lang] }}\n          </div>\n          <input\n            v-model=\"comment\"\n            autogrow\n            :placeholder=\"placeholder\"\n            class=\"survey-input\"\n            :rules=\"[rules.max]\"\n            @blur=\"selectItem(answer)\"\n          />\n        </div>\n\n        <!-- Promoter question -->\n        <div v-show=\"checkDetractorAnswer() === 'promoter'\" class=\"subtitle\">\n          <div\n            v-if=\"\n              selectedQuestion.promoter_comment_question !== undefined &&\n                selectedQuestion.promoter_comment_question[lang] !== ''\n            \"\n          >\n            {{ selectedQuestion.promoter_comment_question[lang] }}\n          </div>\n          <input\n            v-model=\"comment\"\n            autogrow\n            :placeholder=\"placeholder\"\n            class=\"survey-input\"\n            :rules=\"[rules.max]\"\n            @blur=\"selectItem(this.answer)\"\n          />\n        </div>\n      </div>\n    </template>\n  </QuestionContainer>\n</template>\n<script>\nimport QuestionContainer from './QuestionContainer'\nimport ButtonQuestion from './ButtonQuestionComponent'\nimport SurveyUseCase from '../../arch/survey/usecase'\nconst surveyUseCase = new SurveyUseCase()\n\nexport default {\n  components: { ButtonQuestion, QuestionContainer },\n  props: {\n    selectedQuestion: {\n      type: Object,\n    },\n    lang: {\n      type: String,\n      default: 'pt_BR',\n    },\n    nps_type: {\n      type: String,\n    },\n    onSelectAnswer: {\n      type: Function,\n      default: () => {},\n    },\n    color: {\n      type: String,\n    },\n    status: {\n      type: Number,\n      default: 1,\n    },\n    currentAnswer: {\n      type: Object,\n    },\n  },\n  data() {\n    return {\n      comment: '',\n      answer: '',\n      rules: {\n        max: v => v.length <= 5000 || this.$t('general.rules.max_length') + ' 5000',\n      },\n    }\n  },\n  computed: {\n    placeholder() {\n      return surveyUseCase.getCommentPlaceholder(this.lang)\n    },\n  },\n  methods: {\n    selectItem() {\n      const response = {\n        uuid: this.selectedQuestion.item_uuid,\n        type: this.selectedQuestion.type,\n        answer: {\n          response: this.answer,\n          comment: this.comment,\n        },\n      }\n\n      this.onSelectAnswer(response)\n    },\n    checkDetractorAnswer() {\n      if (this.answer === '') {\n        return\n      }\n      const answerNumber = Number(this.answer)\n      if (answerNumber === 10 || answerNumber === 9) {\n        return 'promoter'\n      } else if (answerNumber === 7 || answerNumber === 8) {\n        return 'neutral'\n      } else {\n        return 'detractor'\n      }\n    },\n    selectAnswer(item) {\n      this.answer = item\n      this.selectItem(item)\n    },\n  },\n  mounted() {\n    if (this.currentAnswer?.answer?.comment) {\n      this.comment = this.currentAnswer.answer.comment\n    }\n    if (this.currentAnswer?.answer?.response != null) {\n      this.answer = Number(this.currentAnswer.answer.response)\n    }\n    // this.$watch('comment', () => this.selectItem(this.answer))\n  },\n}\n</script>\n"]}]}