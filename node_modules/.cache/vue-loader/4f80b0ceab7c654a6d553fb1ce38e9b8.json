{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/track/workplace/a2/frontend/widget/src/views/Widget/Box.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/views/Widget/Box.vue","mtime":1618598300006},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBjb25zdHMgZnJvbSAnLi4vLi4vY29uc3RzJwppbXBvcnQgSWNvbiBmcm9tICcuLi8uLi9jb21wb25lbnRzL0ljb24nCmltcG9ydCBTdXJ2ZXkgZnJvbSAnLi9TdXJ2ZXknCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCcKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IEljb24sIFN1cnZleSB9LAogIHByb3BzOiB7CiAgICB3aWRnZXQ6IE9iamVjdAogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBjb25zdHM6IGNvbnN0cwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKHsKICAgICAgbGFuZ3VhZ2U6IHN0YXRlID0+IHN0YXRlLnN1cnZleS5sYW5ndWFnZQogICAgfSksCiAgICBjb2xvcnMgKCkgewogICAgICBsZXQgcHJpbWFyeUNvbG9yID0gdGhpcy53aWRnZXQuc3VydmV5LnByaW1hcnlfY29sb3IgfHwgJyMzNTQwNTInCiAgICAgIGxldCBzZWNvbmRhcnlDb2xvciA9ICcjZmZmJwogICAgICBpZiAoIXRoaXMud2lkZ2V0LnN1cnZleV9jb2xvcnMpIHsKICAgICAgICBzZWNvbmRhcnlDb2xvciA9IHRoaXMud2lkZ2V0LnNlY29uZGFyeV9jb2xvcgogICAgICAgIHByaW1hcnlDb2xvciA9IHRoaXMud2lkZ2V0LnByaW1hcnlfY29sb3IKICAgICAgfQogICAgICByZXR1cm4geyBwcmltYXJ5Q29sb3IsIHNlY29uZGFyeUNvbG9yIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKCgoKICB9Cn0K"},{"version":3,"sources":["Box.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA","file":"Box.vue","sourceRoot":"src/views/Widget","sourcesContent":["<template>\n  <div\n    :class=\"widget.mode === consts.WIDGET_MODE.EMBEBED ? 'widget-embebed' : 'widget-fixed'\"\n    class=\"box\"\n    :style=\"{background: colors.secondaryColor}\">\n    <div id=\"track__widget-close\" class=\"icon-close\">\n      <Icon name=\"Close\" :color=\"colors.primaryColor\" class=\"cursor-pointer\" />\n    </div>\n    <div class=\"track-question\">\n      <Survey :widget=\"widget\" />\n    </div>\n\n  </div>\n</template>\n<script>\nimport consts from '../../consts'\nimport Icon from '../../components/Icon'\nimport Survey from './Survey'\nimport { mapState } from 'vuex'\n\nexport default {\n  components: { Icon, Survey },\n  props: {\n    widget: Object\n  },\n  data () {\n    return {\n      consts: consts\n    }\n  },\n  computed: {\n    ...mapState({\n      language: state => state.survey.language\n    }),\n    colors () {\n      let primaryColor = this.widget.survey.primary_color || '#354052'\n      let secondaryColor = '#fff'\n      if (!this.widget.survey_colors) {\n        secondaryColor = this.widget.secondary_color\n        primaryColor = this.widget.primary_color\n      }\n      return { primaryColor, secondaryColor }\n    }\n  },\n  methods: {\n\n\n\n  }\n}\n</script>\n<style scoped>\n.box {\n  background-color: white;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n  border: 1px solid transparent;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);\n}\n.widget-fixed {\n  position: fixed;\n  bottom: 20px;\n  max-height: 600px;\n  max-width: 450px;\n  width: 100%;\n  right: 0;\n  z-index: 99999;\n}\n.widget-embebed {\n  position: relative;\n  width: 100%;\n  max-height: 600px;\n}\n.icon-close {\n  padding: 10px;\n  text-align: right;\n}\n.cursor-pointer {\n  cursor: pointer;\n}\n\n.track-question {\n  max-height: 500px;\n  overflow: auto;\n  padding: 20px;\n}\n</style>"]}]}