{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/track/workplace/a2/frontend/widget/src/components/MultipleChoice.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/components/MultipleChoice.vue","mtime":1618498328091},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBRdWVzdGlvbkNvbnRhaW5lciBmcm9tICcuL1F1ZXN0aW9uQ29udGFpbmVyJwoKaW1wb3J0IF8gZnJvbSAnbG9kYXNoJwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyBRdWVzdGlvbkNvbnRhaW5lciB9LAogIHByb3BzOiB7CiAgICBzZWxlY3RlZFF1ZXN0aW9uOiB7CiAgICAgIHR5cGU6IE9iamVjdAogICAgfSwKICAgIGxhbmc6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAncHRfQlInCiAgICB9LAogICAgb25TZWxlY3RBbnN3ZXI6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsgfQogICAgfSwKICAgIGNvbG9yOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIHN0YXR1czogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEKICAgIH0sCiAgICBjdXJyZW50QW5zd2VyOiB7CiAgICAgIHR5cGU6IE9iamVjdAogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIG90aGVyICh2YWx1ZSkgewogICAgICBpZiAodmFsdWUgJiYgIXRoaXMuc2VsZWN0ZWRRdWVzdGlvbi5tdWx0aXBsZV9hbnN3ZXJzKSB7CiAgICAgICAgdGhpcy5hbnN3ZXIgPSBudWxsCiAgICAgICAgdGhpcy5zZWxlY3RPcHRpb24obnVsbCkKICAgICAgfQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG9wdGlvbk90aGVyICgpIHsKICAgICAgcmV0dXJuIHN1cnZleVVzZUNhc2UuZ2V0T3B0aW9uT3RoZXJMYWJlbCh0aGlzLmxhbmcpCiAgICB9LAogICAgb3B0aW9uc0xpc3Q6IHsKICAgICAgZ2V0ICgpIHsKICAgICAgICBpZiAodGhpcy5zZWxlY3RlZFF1ZXN0aW9uLnJhbmRvbWl6ZSkgewogICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IFsuLi50aGlzLnNlbGVjdGVkUXVlc3Rpb24ub3B0aW9uc10KICAgICAgICAgIGZvciAobGV0IGkgPSBvcHRpb25zLmxlbmd0aCAtIDE7IGkgPiAwOyBpLS0pIHsKICAgICAgICAgICAgY29uc3QgaiA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGkpCiAgICAgICAgICAgIGNvbnN0IHRlbXAgPSBvcHRpb25zW2ldCiAgICAgICAgICAgIG9wdGlvbnNbaV0gPSBvcHRpb25zW2pdCiAgICAgICAgICAgIG9wdGlvbnNbal0gPSB0ZW1wCiAgICAgICAgICB9CiAgICAgICAgICByZXR1cm4gb3B0aW9ucwogICAgICAgIH0KICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZFF1ZXN0aW9uLm9wdGlvbnMKICAgICAgfQogICAgfSwKICAgIHNob3dDb21tZW50ICgpIHsKICAgICAgY29uc3Qgc2hvd2NvbW1lbnQgPSAodGhpcy5vcHRpb25zLmxlbmd0aCA+IDAgfHwgdGhpcy5vdGhlcikgJiYgdGhpcy5zZWxlY3RlZFF1ZXN0aW9uLmNvbW1lbnRzX2VuYWJsZWQKICAgICAgaWYgKCFzaG93Y29tbWVudCkgewogICAgICAgIHRoaXMuY2xlYXJDb21tZW50KCkKICAgICAgfQoKICAgICAgcmV0dXJuIHNob3djb21tZW50CiAgICB9CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGxldHRlcnM6IHN1cnZleVVzZUNhc2UuZ2V0TXVsdGlwbGVDaG9pY2VMZXR0ZXJzKCksCiAgICAgIG9wdGlvbnM6IFtdLAogICAgICBvdGhlcjogbnVsbCwKICAgICAgY29tbWVudDogJycsCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgbWF4OiB2ID0+IHYubGVuZ3RoIDw9IDUwMDAgfHwgdGhpcy4kdCgnZ2VuZXJhbC5ydWxlcy5tYXhfbGVuZ3RoJykgKyAnIDUwMDAnCiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNlbGVjdE9wdGlvbiAob3B0aW9uLCBwYXJ0aWFsKSB7CiAgICAgIGlmICghdGhpcy5zZWxlY3RlZFF1ZXN0aW9uLm11bHRpcGxlX2Fuc3dlcnMpIHsKICAgICAgICB0aGlzLmNsZWFyU2VsZWN0ZWRJdGVtcygpCiAgICAgICAgdGhpcy5vcHRpb25zID0gW10KICAgICAgICBpZiAob3B0aW9uKSB7CiAgICAgICAgICB0aGlzLm90aGVyID0gbnVsbAogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKG9wdGlvbiAhPSBudWxsKSB7CiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLm9wdGlvbnNMaXN0LmZpbmRJbmRleChvcHRpb25saXN0ID0+IG9wdGlvbmxpc3RbdGhpcy5sYW5nXSA9PT0gb3B0aW9uW3RoaXMubGFuZ10pCiAgICAgICAgY29uc3QgcmVmID0gJ3JlZl8nICsgaW5kZXgKICAgICAgICBpZiAodGhpcy4kcmVmc1tyZWZdWzBdLmNsYXNzTGlzdC5jb250YWlucygnb3B0aW9uX3NlbGVjdGVkJykpIHsKICAgICAgICAgIHRoaXMuJHJlZnNbcmVmXVswXS5jbGFzc0xpc3QucmVtb3ZlKCdvcHRpb25fc2VsZWN0ZWQnKQogICAgICAgICAgY29uc3Qgb3B0aW9uSW5kZXggPSB0aGlzLm9wdGlvbnMuZmluZEluZGV4KG9wdGlvblRlbXAgPT4gSlNPTi5zdHJpbmdpZnkob3B0aW9uVGVtcCkgPT09IEpTT04uc3RyaW5naWZ5KG9wdGlvbikpCiAgICAgICAgICB0aGlzLm9wdGlvbnMuc3BsaWNlKG9wdGlvbkluZGV4LCAxKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiRyZWZzW3JlZl1bMF0uY2xhc3NMaXN0LmFkZCgnb3B0aW9uX3NlbGVjdGVkJykKICAgICAgICAgIHRoaXMub3B0aW9ucy5wdXNoKG9wdGlvbikKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmICghcGFydGlhbCkgewogICAgICAgIHRoaXMuc2VsZWN0SXRlbSgpCiAgICAgIH0KICAgIH0sCiAgICBjbGVhclNlbGVjdGVkSXRlbXMgKCkgewogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuc2VsZWN0ZWRRdWVzdGlvbi5vcHRpb25zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdGhpcy4kcmVmc1sncmVmXycgKyBpXVswXS5jbGFzc0xpc3QucmVtb3ZlKCdvcHRpb25fc2VsZWN0ZWQnKQogICAgICB9CiAgICB9LAogICAgc2VsZWN0SXRlbTogXy5kZWJvdW5jZShmdW5jdGlvbiAoKSB7CiAgICAgIGNvbnN0IHJlc3BvbnNlID0gewogICAgICAgIHV1aWQ6IHRoaXMuc2VsZWN0ZWRRdWVzdGlvbi5pdGVtX3V1aWQsCiAgICAgICAgdHlwZTogdGhpcy5zZWxlY3RlZFF1ZXN0aW9uLnR5cGUsCiAgICAgICAgYW5zd2VyOiB7CiAgICAgICAgICByZXNwb25zZTogdGhpcy5vcHRpb25zLAogICAgICAgICAgY29tbWVudDogdGhpcy5jb21tZW50LAogICAgICAgICAgb3B0aW9uX290aGVyOiB0aGlzLm90aGVyCiAgICAgICAgfQogICAgICB9CiAgICAgIHRoaXMub25TZWxlY3RBbnN3ZXIocmVzcG9uc2UpCiAgICB9LCAyNTApLAogICAgZ2V0TGFuZyAoKSB7CiAgICAgIGlmICh0aGlzLnNlbGVjdGVkUXVlc3Rpb24ub3B0aW9ucykgewogICAgICAgIGZvciAobGV0IGtleSBpbiB0aGlzLnNlbGVjdGVkUXVlc3Rpb24ub3B0aW9uc1swXSkgewogICAgICAgICAgcmV0dXJuIGtleQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGNsZWFyQ29tbWVudCAoKSB7CiAgICAgIHRoaXMuY29tbWVudCA9ICcnCiAgICB9CiAgfSwKICBtb3VudGVkICgpIHsKICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgaWYgKHRoaXMuY3VycmVudEFuc3dlcj8uYW5zd2VyPy5yZXNwb25zZSAhPSBudWxsKSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGNvbnN0IGN1cnJlbnRSZXNwb25zZSA9IHRoaXMuY3VycmVudEFuc3dlci5hbnN3ZXIucmVzcG9uc2UKICAgICAgICAgIGN1cnJlbnRSZXNwb25zZS5mb3JFYWNoKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgdGhpcy5zZWxlY3RPcHRpb24ocmVzcG9uc2UsIHRydWUpCiAgICAgICAgICB9KQogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAvLyBTZWxlY3RlZCBxdWVzdGlvbiBjYW1taW5nIGZyb20gZW1haWwKICAgICAgICAgIGNvbnN0IG9wdGlvbiA9IHRoaXMuc2VsZWN0ZWRRdWVzdGlvbi5vcHRpb25zLmZpbmQob3B0aW9uID0+IHsKICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG9wdGlvbikuaW5jbHVkZXModGhpcy5jdXJyZW50QW5zd2VyLmFuc3dlci5yZXNwb25zZSkKICAgICAgICAgIH0pCiAgICAgICAgICB0aGlzLnNlbGVjdE9wdGlvbihvcHRpb24sIHRydWUpCiAgICAgICAgfQogICAgICB9CiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZQogICAgICBpZiAodGhpcy5jdXJyZW50QW5zd2VyPy5vcHRpb25fb3RoZXIgIT0gbnVsbCkgewogICAgICAgIHRoaXMub3RoZXIgPSB0aGlzLmN1cnJlbnRBbnN3ZXIub3B0aW9uX290aGVyCiAgICAgIH0KICAgICAgdGhpcy4kd2F0Y2goJ290aGVyJywgKCkgPT4gdGhpcy5zZWxlY3RJdGVtKCkpCgogICAgICBpZiAodGhpcy5jdXJyZW50QW5zd2VyPy5hbnN3ZXI/LmNvbW1lbnQpIHsKICAgICAgICB0aGlzLmNvbW1lbnQgPSB0aGlzLmN1cnJlbnRBbnN3ZXIuYW5zd2VyLmNvbW1lbnQKICAgICAgfQogICAgICB0aGlzLiR3YXRjaCgnY29tbWVudCcsICgpID0+IHRoaXMuc2VsZWN0SXRlbSgpKQogICAgfSkKICB9Cn0K"},{"version":3,"sources":["MultipleChoice.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"MultipleChoice.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <QuestionContainer\n    :badgeText=\"$t('survey.question_type.multiple_choice')\"\n    :status=\"status\"\n    :questionText=\"selectedQuestion.question[lang]\"\n    :isObligatory=\"selectedQuestion.is_obligatory\"\n    :color=\"color\">\n    <template v-slot:buttons>\n      <div :class=\"selectedQuestion.horizontal_align ? 'flex ' : 'inline-block'\">\n        <div v-for=\"(option,index) in optionsList\" :key=\"index\">\n          <div class=\"option\" @click=\"selectOption(option)\" :ref=\"'ref_'+index\">\n            <div class=\"choice notranslate\"> {{letters[index]}} </div>\n            <div class=\"text\"> {{option[lang]}}</div>\n          </div>\n        </div>\n      </div>\n      <div v-if=\"selectedQuestion.option_other\">\n        <div class=\"flex\">\n          <div class=\"q-mt-md q-mr-sm other\"> {{optionOther}} </div>\n          <q-input dense v-model=\"other\" style=\"width: 50%\" class=\"survey-input\" />\n        </div>\n      </div>\n    </template>\n    <template v-slot:comment>\n      <div v-show=\"showComment\" class=\"subtitle\">\n        <div v-if=\"selectedQuestion.comment_question[lang] !== ''\"> {{selectedQuestion.comment_question[lang]}}</div>\n        <q-input v-model=\"comment\" autogrow :placeholder=\"$t('survey.new.placeholder_comment')\" :rules=\"[rules.max]\" class=\"survey-input\" />\n      </div>\n    </template>\n  </QuestionContainer>\n</template>\n<script>\nimport QuestionContainer from './QuestionContainer'\n\nimport _ from 'lodash'\nexport default {\n  components: { QuestionContainer },\n  props: {\n    selectedQuestion: {\n      type: Object\n    },\n    lang: {\n      type: String,\n      default: 'pt_BR'\n    },\n    onSelectAnswer: {\n      type: Function,\n      default: () => { }\n    },\n    color: {\n      type: String\n    },\n    status: {\n      type: Number,\n      default: 1\n    },\n    currentAnswer: {\n      type: Object\n    }\n  },\n  watch: {\n    other (value) {\n      if (value && !this.selectedQuestion.multiple_answers) {\n        this.answer = null\n        this.selectOption(null)\n      }\n    }\n  },\n  computed: {\n    optionOther () {\n      return surveyUseCase.getOptionOtherLabel(this.lang)\n    },\n    optionsList: {\n      get () {\n        if (this.selectedQuestion.randomize) {\n          const options = [...this.selectedQuestion.options]\n          for (let i = options.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * i)\n            const temp = options[i]\n            options[i] = options[j]\n            options[j] = temp\n          }\n          return options\n        }\n        return this.selectedQuestion.options\n      }\n    },\n    showComment () {\n      const showcomment = (this.options.length > 0 || this.other) && this.selectedQuestion.comments_enabled\n      if (!showcomment) {\n        this.clearComment()\n      }\n\n      return showcomment\n    }\n  },\n  data () {\n    return {\n      letters: surveyUseCase.getMultipleChoiceLetters(),\n      options: [],\n      other: null,\n      comment: '',\n      rules: {\n        max: v => v.length <= 5000 || this.$t('general.rules.max_length') + ' 5000'\n      }\n    }\n  },\n  methods: {\n    selectOption (option, partial) {\n      if (!this.selectedQuestion.multiple_answers) {\n        this.clearSelectedItems()\n        this.options = []\n        if (option) {\n          this.other = null\n        }\n      }\n\n      if (option != null) {\n        const index = this.optionsList.findIndex(optionlist => optionlist[this.lang] === option[this.lang])\n        const ref = 'ref_' + index\n        if (this.$refs[ref][0].classList.contains('option_selected')) {\n          this.$refs[ref][0].classList.remove('option_selected')\n          const optionIndex = this.options.findIndex(optionTemp => JSON.stringify(optionTemp) === JSON.stringify(option))\n          this.options.splice(optionIndex, 1)\n        } else {\n          this.$refs[ref][0].classList.add('option_selected')\n          this.options.push(option)\n        }\n      }\n\n      if (!partial) {\n        this.selectItem()\n      }\n    },\n    clearSelectedItems () {\n      for (let i = 0; i < this.selectedQuestion.options.length; i++) {\n        this.$refs['ref_' + i][0].classList.remove('option_selected')\n      }\n    },\n    selectItem: _.debounce(function () {\n      const response = {\n        uuid: this.selectedQuestion.item_uuid,\n        type: this.selectedQuestion.type,\n        answer: {\n          response: this.options,\n          comment: this.comment,\n          option_other: this.other\n        }\n      }\n      this.onSelectAnswer(response)\n    }, 250),\n    getLang () {\n      if (this.selectedQuestion.options) {\n        for (let key in this.selectedQuestion.options[0]) {\n          return key\n        }\n      }\n    },\n    clearComment () {\n      this.comment = ''\n    }\n  },\n  mounted () {\n    this.$nextTick(() => {\n      if (this.currentAnswer?.answer?.response != null) {\n        try {\n          const currentResponse = this.currentAnswer.answer.response\n          currentResponse.forEach(response => {\n            this.selectOption(response, true)\n          })\n        } catch (error) {\n          // Selected question camming from email\n          const option = this.selectedQuestion.options.find(option => {\n            return JSON.stringify(option).includes(this.currentAnswer.answer.response)\n          })\n          this.selectOption(option, true)\n        }\n      }\n      // eslint-disable-next-line\n      if (this.currentAnswer?.option_other != null) {\n        this.other = this.currentAnswer.option_other\n      }\n      this.$watch('other', () => this.selectItem())\n\n      if (this.currentAnswer?.answer?.comment) {\n        this.comment = this.currentAnswer.answer.comment\n      }\n      this.$watch('comment', () => this.selectItem())\n    })\n  }\n}\n</script>\n<style scoped>\n.option {\n  color: #7f8fa4;\n  font-size: 16px;\n\n  margin-bottom: 10px;\n  margin-right: 5px;\n  cursor: pointer;\n\n  border: 1px solid #828282;\n  border-radius: 16px;\n  padding: 5px 10px;\n  /* min-width: 280px; */\n  display: flex;\n}\n\n.option .choice {\n  color: #333759;\n  font-weight: 600;\n  opacity: 0.4;\n  margin-right: 20px;\n  display: inline-block;\n}\n.option .text {\n  display: inline-block;\n}\n.option_selected {\n  background-color: rgba(219, 219, 219, 0.74);\n}\n.option:hover:not(.option_selected) {\n  background-color: rgba(238, 238, 238, 0.637);\n}\n.other {\n  color: #333759;\n}\n</style>\n"]}]}