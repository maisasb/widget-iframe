{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/track/workplace/a2/frontend/widget/src/components/survey/ButtonQuestionComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/components/survey/ButtonQuestionComponent.vue","mtime":1618838230177},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTdXJ2ZXlVc2VDYXNlIGZyb20gJy4uLy4uL2FyY2gvc3VydmV5L3VzZWNhc2UnCmNvbnN0IHN1cnZleVVzZUNhc2UgPSBuZXcgU3VydmV5VXNlQ2FzZSgpCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0J1dHRvblF1ZXN0aW9uJywKICBwcm9wczogewogICAgcXVlc3Rpb25UeXBlOiBOdW1iZXIsCiAgICBzY2FsZV90eXBlOiBOdW1iZXIsCiAgICBtaW5fc2NhbGU6IE51bWJlciwKICAgIG1heF9zY2FsZTogTnVtYmVyLAogICAgYnV0dG9uX2Rlc2lnbjogTnVtYmVyLAogICAgY29sb3JfcGF0dGVybjogTnVtYmVyLAogICAgYmlnOiBCb29sZWFuLAogICAgbGFiZWxlZDogQm9vbGVhbiwKICAgIHJldmVyc2U6IEJvb2xlYW4sCiAgICBsYWJlbF9taW46IFN0cmluZywKICAgIGxhYmVsX21heDogU3RyaW5nLAogICAgY3VzdG9tX2NvbG9yOiBTdHJpbmcsCiAgICBjdXJyZW50X3Jlc3BvbnNlOiBbU3RyaW5nLCBOdW1iZXJdLAogICAgb25DbGljazogewogICAgICB0eXBlOiBGdW5jdGlvbiwKICAgICAgZGVmYXVsdDogKCkgPT4geyB9CiAgICB9LAogICAgbGFuZ3VhZ2U6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAncHRfQlInCiAgICB9CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlbGVjdGVkOiBudWxsLAogICAgICBmaWxsZWQ6IGZhbHNlLAogICAgICByb3VuZGVkOiAnMS41cHgnCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgc2NhbGVzICgpIHsKICAgICAgcmV0dXJuIHN1cnZleVVzZUNhc2UuZ2V0UXVlc3Rpb25TY2FsZSh0aGlzLm1pbl9zY2FsZSwgdGhpcy5tYXhfc2NhbGUsIHRoaXMucmV2ZXJzZSwgdGhpcy5zY2FsZV90eXBlLCB0aGlzLnF1ZXN0aW9uVHlwZSkKICAgIH0sCiAgICBsYWJlbE1pbkFycmF5ICgpIHsKICAgICAgcmV0dXJuIHRoaXMubGFiZWxfbWluLnNwbGl0KCcgJykKICAgIH0sCiAgICBsYWJlbE1heEFycmF5ICgpIHsKICAgICAgcmV0dXJuIHRoaXMubGFiZWxfbWF4LnNwbGl0KCcgJykKICAgIH0sCiAgICBjb2xvcnNBcnJheSAoKSB7CiAgICAgIHJldHVybiBzdXJ2ZXlVc2VDYXNlLmdldFF1ZXN0aW9uQ29sb3JzKHRoaXMubWluX3NjYWxlLCB0aGlzLm1heF9zY2FsZSwgdGhpcy5yZXZlcnNlKQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGJ1dHRvbl9kZXNpZ24gKCkgewogICAgICB0aGlzLmdldERlc2lnblByb3BlcnRpZXMoKQogICAgfSwKICAgIHNjYWxlX3R5cGUgKCkgewogICAgICB0aGlzLmdldERlc2lnblByb3BlcnRpZXMoKQogICAgfSwKICAgIG1pbl9zY2FsZSAoKSB7CiAgICAgIHRoaXMuZ2V0RGVzaWduUHJvcGVydGllcygpCiAgICB9LAogICAgbWF4X3NjYWxlICgpIHsKICAgICAgdGhpcy5nZXREZXNpZ25Qcm9wZXJ0aWVzKCkKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNlbGVjdEl0ZW0gKGl0ZW0sIGluZGV4LCBwYXJ0aWFsKSB7CiAgICAgIHRyeSB7CiAgICAgICAgaXRlbSA9IE51bWJlcihpdGVtKQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIC8vIE5vdCBhIG51bWJlcgogICAgICB9CiAgICAgIHRoaXMuc2VsZWN0ZWQgPSBpdGVtCiAgICAgIGNvbnN0IHJlZiA9ICdyZWZfJyArIGluZGV4CiAgICAgIHRoaXMuY2xlYXJTZWxlY3RlZEl0ZW1zKCkKICAgICAgaWYgKCFwYXJ0aWFsKSB7CiAgICAgICAgdGhpcy5vbkNsaWNrKGl0ZW0pCiAgICAgIH0KICAgICAgdGhpcy5jaGFuZ2VTdHlsZU9uU2VsZWN0KHRoaXMuJHJlZnNbcmVmXVswXSwgaW5kZXgpCiAgICB9LAogICAgY2xlYXJTZWxlY3RlZEl0ZW1zICgpIHsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnNjYWxlcy5sZW5ndGg7IGkrKykgewogICAgICAgIGlmICh0aGlzLiRyZWZzWydyZWZfJyArIGldID09PSB1bmRlZmluZWQpIHsKICAgICAgICAgIHJldHVybgogICAgICAgIH0KICAgICAgICBpZiAodGhpcy4kcmVmc1sncmVmXycgKyBpXVswXSAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAvLyBSZXR1cm4gdG8gdGhlIG9sZCBib3JkZXIgY29sb3IKICAgICAgICAgIC8vIHRoaXMuJHJlZnNbJ3JlZl8nICsgaV1bMF0uc3R5bGUgPSB0aGlzLmdldEJ1dHRvblN0eWxlKGkpCiAgICAgICAgICB0aGlzLiRyZWZzWydyZWZfJyArIGldWzBdLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCB0aGlzLmdldEJ1dHRvblN0eWxlKGkpKQogICAgICAgIH0KICAgICAgfQogICAgfSwKCiAgICBnZXRCdXR0b25TdHlsZSAoaW5kZXgpIHsKICAgICAgbGV0IGNvbG9yID0gdGhpcy5nZXRDb2xvcihpbmRleCkKICAgICAgbGV0IHN0eWxlID0gJycKICAgICAgaWYgKHRoaXMuZmlsbGVkKSB7CiAgICAgICAgc3R5bGUgKz0gYGJhY2tncm91bmQ6ICR7Y29sb3J9O2AKICAgICAgICBzdHlsZSArPSBgY29sb3I6ICNGRkZGRkY7YCAvLyBTZSBmb3IgdG9kbyBjb2xvcmlkbyBmb250ZSBicmFuY2EKICAgICAgfSBlbHNlIHsKICAgICAgICBzdHlsZSArPSBgY29sb3I6ICR7Y29sb3J9O2AgLy8gU2UgdGl2ZXIgc8OzIGEgYm9yZGEgZm9udGUgY29sb3JpZGEKICAgICAgfQogICAgICBzdHlsZSArPSBgYm9yZGVyLWNvbG9yOiAke2NvbG9yfTtgCiAgICAgIHN0eWxlICs9IGBib3JkZXItcmFkaXVzOiAke3RoaXMucm91bmRlZH07YAogICAgICBzdHlsZSArPSAnZGlzcGxheTogZmxleDsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7JwoKICAgICAgcmV0dXJuIHN0eWxlCiAgICB9LAogICAgZ2V0RGVzaWduUHJvcGVydGllcyAoKSB7CiAgICAgIHRoaXMuZmlsbGVkID0gc3VydmV5VXNlQ2FzZS5pc0J1dHRvbkZpbGxlZCh0aGlzLmJ1dHRvbl9kZXNpZ24pCiAgICAgIHRoaXMucm91bmRlZCA9IHN1cnZleVVzZUNhc2UuZ2V0QnV0dG9uUm91bmRlZFZhbHVlKHRoaXMuYnV0dG9uX2Rlc2lnbiwgdGhpcy5zY2FsZV90eXBlKQoKICAgICAgdGhpcy5jbGVhclNlbGVjdGVkSXRlbXMoKQogICAgfSwKICAgIG9uSG92ZXIgKGhvdmVyLCBpbmRleCwgaXRlbSwgZSkgewogICAgICBpZiAoZS50YXJnZXQucGFyZW50Tm9kZS5jbGFzc05hbWUuaW5jbHVkZXMoJ251bWJlci1sYWJlbCcpKSB7CiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgY29uc3QgYnV0dG9uID0gZS50YXJnZXQKCiAgICAgIGlmICh0aGlzLnNlbGVjdGVkID09PSBpdGVtKSB7CiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgdGhpcy5jaGFuZ2VEZXNpZ25PbkhvdmVyKGJ1dHRvbiwgaG92ZXIsIGluZGV4KQogICAgfSwKICAgIGNoYW5nZURlc2lnbk9uSG92ZXIgKGJ1dHRvbiwgaG92ZXIsIGluZGV4KSB7CiAgICAgIGlmICgodGhpcy5idXR0b25fZGVzaWduID09PSAyIHx8IHRoaXMuYnV0dG9uX2Rlc2lnbiA9PT0gNCkpIHsgLy8gRGVzaWduIHdpdGggb25seSBib3JkZXIsIGludmVydCBob3ZlcgogICAgICAgIGhvdmVyID0gIWhvdmVyCiAgICAgIH0KICAgICAgY29uc3QgY29sb3IgPSB0aGlzLmdldENvbG9yKGluZGV4KQoKICAgICAgaWYgKGhvdmVyKSB7CiAgICAgICAgYnV0dG9uLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCB0aGlzLmdldEJ1dHRvblN0eWxlKGluZGV4KSArIGA7YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7Y29sb3I6ICR7Y29sb3J9YCkKICAgICAgICAvLyBidXR0b24uc3R5bGUuYmFja2dyb3VuZCA9ICd0cmFuc3BhcmVudCcKICAgICAgICAvLyBidXR0b24uc3R5bGUuY29sb3IgPSBjb2xvcgogICAgICB9IGVsc2UgewogICAgICAgIGJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgdGhpcy5nZXRCdXR0b25TdHlsZShpbmRleCkgKyBgO2JhY2tncm91bmQ6ICR7Y29sb3J9O2NvbG9yOiAjRkZGRkZGYCkKICAgICAgICAvLyBidXR0b24uc3R5bGUuYmFja2dyb3VuZCA9IGNvbG9yCiAgICAgICAgLy8gYnV0dG9uLnN0eWxlLmNvbG9yID0gJyNGRkZGRkYnCiAgICAgIH0KICAgIH0sCiAgICBjaGFuZ2VTdHlsZU9uU2VsZWN0IChidXR0b24sIGluZGV4KSB7CiAgICAgIHRoaXMuY2hhbmdlRGVzaWduT25Ib3ZlcihidXR0b24sIHRydWUsIGluZGV4KQogICAgfSwKICAgIGdldENvbG9yIChpbmRleCkgewogICAgICByZXR1cm4gc3VydmV5VXNlQ2FzZS5nZXRCdXR0b25Db2xvcihpbmRleCwgdGhpcy5jb2xvcl9wYXR0ZXJuLCB0aGlzLmNvbG9yc0FycmF5LCB0aGlzLmN1c3RvbV9jb2xvcikKICAgIH0sCiAgICAvKgogICAgICogSWYgdGhlIHJlc3BvbnNlcyBvZiB0aGlzIHN1cnZleSB3YXMgc2F2ZWQgcGFydGlhbCwgc2VsZWN0IHRoZSBwYXJ0aWFsIGFuc3dlcgogICAgICovCiAgICBzZWxlY3RQYXJ0aWFsVmFsdWUgKCkgewogICAgICBpZiAodGhpcy5jdXJyZW50X3Jlc3BvbnNlICE9IG51bGwpIHsKICAgICAgICBsZXQgaW5kZXggPSAtMQogICAgICAgIGlmICh0aGlzLnNjYWxlX3R5cGUgPT09IDApIHsKICAgICAgICAgIGluZGV4ID0gdGhpcy5zY2FsZXMuZmluZEluZGV4KHNjYWxlID0+IHNjYWxlID09PSBOdW1iZXIodGhpcy5jdXJyZW50X3Jlc3BvbnNlKSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaW5kZXggPSB0aGlzLnNjYWxlcy5maW5kSW5kZXgoc2NhbGUgPT4gc2NhbGUudmFsdWUgPT09IE51bWJlcih0aGlzLmN1cnJlbnRfcmVzcG9uc2UpKQogICAgICAgIH0KICAgICAgICBpZiAoaW5kZXggIT09IHVuZGVmaW5lZCAmJiBpbmRleCAhPT0gLTEpIHsKICAgICAgICAgIHRoaXMuc2VsZWN0SXRlbShOdW1iZXIodGhpcy5jdXJyZW50X3Jlc3BvbnNlKSwgaW5kZXgsIHRydWUpCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkICgpIHsKICAgIHRoaXMuZ2V0RGVzaWduUHJvcGVydGllcygpCiAgfSwKICBtb3VudGVkICgpIHsKICAgIHRoaXMuc2VsZWN0UGFydGlhbFZhbHVlKCkKICB9Cn0K"},{"version":3,"sources":["ButtonQuestionComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"ButtonQuestionComponent.vue","sourceRoot":"src/components/survey","sourcesContent":["<template>\n  <div>\n    <div v-if=\"scale_type === 0\">\n      <div ref=\"buttons\" class=\"button-row\" :style=\"{'margin-bottom': labeled? '40px' : '0'}\">\n        <div v-for=\"(n, index) in scales\" :key=\"index\">\n          <div\n\n            @click=\"selectItem(n, index)\"\n            :ref=\"'ref_'+index\"\n            :class=\"['button_design', big ? 'big' : '', selected === n ? 'selected': '']\"\n            :style=\"getButtonStyle(index)\"\n            @mouseover.stop=\"onHover(true,index, n, $event)\"\n            @mouseout.stop=\"onHover(false,index, n, $event)\">\n            {{n}}\n\n            <div v-if=\"labeled && index === 0\" class=\"number-label desktop-only\">\n              <div v-for=\"(label,index) in labelMinArray\" :key=\"index\">\n                {{label}}\n              </div>\n            </div>\n            <div v-else-if=\"labeled && index === scales.length -1\" class=\"number-label desktop-only\">\n              <div v-for=\"(label,index) in labelMaxArray\" :key=\"index\">\n                {{label}}\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n      <div class=\"flex justify-center\" v-if=\"labeled\" style=\"margin-top: -30px\">\n        <div class=\"legend-mobile mobile-only q-mr-md\">\n          <div class=\"number\" :style=\"{backgroundColor: getColor(0)}\">{{min_scale}} </div>\n          <div class=\"label\" :style=\"{color: getColor(0)}\">\n            {{label_min}}\n          </div>\n        </div>\n        <div class=\"legend-mobile mobile-only\">\n          <div class=\"number\" :style=\"{backgroundColor: getColor(scales.length-1)}\"> {{max_scale}}</div>\n          <div class=\"label\" :style=\"{color: getColor(scales.length-1)}\">\n            {{label_max}}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div v-else>\n      <div class=\"button-row\">\n        <div\n          :ref=\"'ref_'+index\"\n          @click=\"selectItem(likert.value, index)\"\n          v-for=\"(likert, index) in scales\"\n          :key=\"index\"\n          class=\"likert\"\n          :class=\"{'selected': selected === likert.value, 'scale7': max_scale === 7}\"\n          :style=\"getButtonStyle(index)\"\n          @mouseover=\"onHover(true,index,likert.value, $event)\"\n          @mouseout=\"onHover(false,index,likert.value, $event)\">\n          {{likert.label[language]}}\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n<script>\nimport SurveyUseCase from '../../arch/survey/usecase'\nconst surveyUseCase = new SurveyUseCase()\n\nexport default {\n  name: 'ButtonQuestion',\n  props: {\n    questionType: Number,\n    scale_type: Number,\n    min_scale: Number,\n    max_scale: Number,\n    button_design: Number,\n    color_pattern: Number,\n    big: Boolean,\n    labeled: Boolean,\n    reverse: Boolean,\n    label_min: String,\n    label_max: String,\n    custom_color: String,\n    current_response: [String, Number],\n    onClick: {\n      type: Function,\n      default: () => { }\n    },\n    language: {\n      type: String,\n      default: 'pt_BR'\n    }\n  },\n  data () {\n    return {\n      selected: null,\n      filled: false,\n      rounded: '1.5px'\n    }\n  },\n  computed: {\n    scales () {\n      return surveyUseCase.getQuestionScale(this.min_scale, this.max_scale, this.reverse, this.scale_type, this.questionType)\n    },\n    labelMinArray () {\n      return this.label_min.split(' ')\n    },\n    labelMaxArray () {\n      return this.label_max.split(' ')\n    },\n    colorsArray () {\n      return surveyUseCase.getQuestionColors(this.min_scale, this.max_scale, this.reverse)\n    }\n  },\n  watch: {\n    button_design () {\n      this.getDesignProperties()\n    },\n    scale_type () {\n      this.getDesignProperties()\n    },\n    min_scale () {\n      this.getDesignProperties()\n    },\n    max_scale () {\n      this.getDesignProperties()\n    }\n  },\n  methods: {\n    selectItem (item, index, partial) {\n      try {\n        item = Number(item)\n      } catch (error) {\n        // Not a number\n      }\n      this.selected = item\n      const ref = 'ref_' + index\n      this.clearSelectedItems()\n      if (!partial) {\n        this.onClick(item)\n      }\n      this.changeStyleOnSelect(this.$refs[ref][0], index)\n    },\n    clearSelectedItems () {\n      for (let i = 0; i < this.scales.length; i++) {\n        if (this.$refs['ref_' + i] === undefined) {\n          return\n        }\n        if (this.$refs['ref_' + i][0] !== undefined) {\n          // Return to the old border color\n          // this.$refs['ref_' + i][0].style = this.getButtonStyle(i)\n          this.$refs['ref_' + i][0].setAttribute('style', this.getButtonStyle(i))\n        }\n      }\n    },\n\n    getButtonStyle (index) {\n      let color = this.getColor(index)\n      let style = ''\n      if (this.filled) {\n        style += `background: ${color};`\n        style += `color: #FFFFFF;` // Se for todo colorido fonte branca\n      } else {\n        style += `color: ${color};` // Se tiver só a borda fonte colorida\n      }\n      style += `border-color: ${color};`\n      style += `border-radius: ${this.rounded};`\n      style += 'display: flex; justify-content: center; align-items: center;'\n\n      return style\n    },\n    getDesignProperties () {\n      this.filled = surveyUseCase.isButtonFilled(this.button_design)\n      this.rounded = surveyUseCase.getButtonRoundedValue(this.button_design, this.scale_type)\n\n      this.clearSelectedItems()\n    },\n    onHover (hover, index, item, e) {\n      if (e.target.parentNode.className.includes('number-label')) {\n        return\n      }\n      const button = e.target\n\n      if (this.selected === item) {\n        return\n      }\n      this.changeDesignOnHover(button, hover, index)\n    },\n    changeDesignOnHover (button, hover, index) {\n      if ((this.button_design === 2 || this.button_design === 4)) { // Design with only border, invert hover\n        hover = !hover\n      }\n      const color = this.getColor(index)\n\n      if (hover) {\n        button.setAttribute('style', this.getButtonStyle(index) + `;background: transparent;color: ${color}`)\n        // button.style.background = 'transparent'\n        // button.style.color = color\n      } else {\n        button.setAttribute('style', this.getButtonStyle(index) + `;background: ${color};color: #FFFFFF`)\n        // button.style.background = color\n        // button.style.color = '#FFFFFF'\n      }\n    },\n    changeStyleOnSelect (button, index) {\n      this.changeDesignOnHover(button, true, index)\n    },\n    getColor (index) {\n      return surveyUseCase.getButtonColor(index, this.color_pattern, this.colorsArray, this.custom_color)\n    },\n    /*\n     * If the responses of this survey was saved partial, select the partial answer\n     */\n    selectPartialValue () {\n      if (this.current_response != null) {\n        let index = -1\n        if (this.scale_type === 0) {\n          index = this.scales.findIndex(scale => scale === Number(this.current_response))\n        } else {\n          index = this.scales.findIndex(scale => scale.value === Number(this.current_response))\n        }\n        if (index !== undefined && index !== -1) {\n          this.selectItem(Number(this.current_response), index, true)\n        }\n      }\n    }\n  },\n  created () {\n    this.getDesignProperties()\n  },\n  mounted () {\n    this.selectPartialValue()\n  }\n}\n</script>\n<style scoped lang=\"scss\">\n.q-gutter-x-sm {\n  > *:first-child {\n    margin-left: 0;\n  }\n}\n\n.button_design {\n  color: #21345f;\n  font-weight: bold;\n  font-size: 16px;\n  cursor: pointer;\n  height: 40px;\n  width: 40px;\n  position: relative;\n  border: 1px solid;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  margin-bottom: 10px;\n  margin-right: 5px;\n  // margin: 0 auto;\n}\n\n/** Likert */\n.button-row {\n  display: flex;\n  text-align: center;\n  width: 100%;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n.likert {\n  font-weight: bold;\n  font-size: 10px;\n  line-height: 13px;\n  text-align: center;\n  color: #ffffff;\n  border-radius: 2px;\n  margin-right: 5px;\n  cursor: pointer;\n  height: 60px;\n  margin-bottom: 10px;\n  border: 1px solid;\n  max-width: 75px;\n  width: 75px;\n}\n.likert:hover {\n  color: #21345f;\n}\n\n.selected {\n  -webkit-box-shadow: 0px 4px 3px #ccc;\n  -moz-box-shadow: 0px 4px 3px #ccc;\n  box-shadow: 0px 4px 3px #ccc;\n}\n\n.question .number-label {\n  text-align: center;\n  font-weight: normal;\n  color: #979797;\n  font-size: 12px;\n  min-width: 50px;\n  line-height: 1.2;\n  position: absolute;\n  bottom: -40px;\n  // left: 0;\n}\n.button_design.big {\n  height: 50px;\n  width: 50px;\n}\n.legend-mobile {\n  display: flex;\n  margin-top: 10px;\n}\n.legend-mobile .number {\n  background: #c0c0c0;\n  border-radius: 100%;\n  color: white;\n  width: 16px;\n  height: 16px;\n  text-align: center;\n  padding-top: 3px;\n  margin-right: 6px;\n  font-size: 10px;\n}\n.legend-mobile .label {\n  color: #c0c0c0;\n  font-size: 10px;\n  line-height: 1.5;\n}\n@media (max-width: 601px) {\n  .button_design,\n  .button_design.big {\n    height: 40px;\n    width: 40px;\n  }\n  .likert {\n    max-width: 70px;\n    width: 70px;\n  }\n}\n@media (max-width: 385px) {\n  .likert {\n    max-width: 60px;\n    width: 60px;\n  }\n}\n@media (max-width: 320px) {\n  .button_design,\n  .button_design.big {\n    height: 30px;\n    width: 30px;\n  }\n  .likert {\n    max-width: 80px;\n    width: 80px;\n  }\n  .likert.scale7 {\n    max-width: 60px;\n    width: 60px;\n  }\n}\n\n@media (max-width: 280px) {\n  .likert.scale7 {\n    max-width: 60px;\n    width: 60px;\n  }\n}\n\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  /* IE10+ CSS styles go here */\n  .question .number-label {\n    left: 0;\n  }\n}\n</style>\n"]}]}