{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/track/workplace/a2/frontend/widget/src/components/survey/Ces.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/components/survey/Ces.vue","mtime":1618838230177},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBRdWVzdGlvbkNvbnRhaW5lciBmcm9tICcuL1F1ZXN0aW9uQ29udGFpbmVyJwppbXBvcnQgQnV0dG9uUXVlc3Rpb24gZnJvbSAnLi9CdXR0b25RdWVzdGlvbkNvbXBvbmVudCcKaW1wb3J0IF8gZnJvbSAnbG9kYXNoJwppbXBvcnQgU3VydmV5VXNlQ2FzZSBmcm9tICcuLi8uLi9hcmNoL3N1cnZleS91c2VjYXNlJwpjb25zdCBzdXJ2ZXlVc2VDYXNlID0gbmV3IFN1cnZleVVzZUNhc2UoKQpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyBCdXR0b25RdWVzdGlvbiwgUXVlc3Rpb25Db250YWluZXIgfSwKICBwcm9wczogewogICAgc2VsZWN0ZWRRdWVzdGlvbjogewogICAgICB0eXBlOiBPYmplY3QKICAgIH0sCiAgICBsYW5nOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ3B0X0JSJwogICAgfSwKICAgIG9uU2VsZWN0QW5zd2VyOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICBkZWZhdWx0OiAoKSA9PiB7IH0KICAgIH0sCiAgICBjb2xvcjogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0sCiAgICBzdGF0dXM6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAxCiAgICB9LAogICAgY3VycmVudEFuc3dlcjogewogICAgICB0eXBlOiBPYmplY3QKICAgIH0KICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgY29tbWVudDogJycsCiAgICAgIGFuc3dlcjogJycsCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgbWF4OiB2ID0+IHYubGVuZ3RoIDw9IDUwMDAgfHwgdGhpcy4kdCgnZ2VuZXJhbC5ydWxlcy5tYXhfbGVuZ3RoJykgKyAnIDUwMDAnCiAgICAgIH0KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBwbGFjZWhvbGRlciAoKSB7CiAgICAgIHJldHVybiBzdXJ2ZXlVc2VDYXNlLmdldENvbW1lbnRQbGFjZWhvbGRlcih0aGlzLmxhbmcpCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZWxlY3RJdGVtOiBfLmRlYm91bmNlKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHRoaXMuYW5zd2VyID0gaXRlbQoKICAgICAgY29uc3QgcmVzcG9uc2UgPSB7CiAgICAgICAgdXVpZDogdGhpcy5zZWxlY3RlZFF1ZXN0aW9uLml0ZW1fdXVpZCwKICAgICAgICB0eXBlOiB0aGlzLnNlbGVjdGVkUXVlc3Rpb24udHlwZSwKICAgICAgICBhbnN3ZXI6IHsKICAgICAgICAgIHJlc3BvbnNlOiBpdGVtLAogICAgICAgICAgY29tbWVudDogdGhpcy5jb21tZW50LAogICAgICAgIH0KICAgICAgfQogICAgICB0aGlzLm9uU2VsZWN0QW5zd2VyKHJlc3BvbnNlKQogICAgfSwgMjUwKQogIH0sCiAgbW91bnRlZCAoKSB7CiAgICBpZiAodGhpcy5jdXJyZW50QW5zd2VyPy5hbnN3ZXI/LmNvbW1lbnQpIHsKICAgICAgdGhpcy5jb21tZW50ID0gdGhpcy5jdXJyZW50QW5zd2VyLmFuc3dlci5jb21tZW50CiAgICB9CiAgICBpZiAodGhpcy5jdXJyZW50QW5zd2VyPy5hbnN3ZXI/LnJlc3BvbnNlICE9IG51bGwpIHsKICAgICAgdGhpcy5hbnN3ZXIgPSBOdW1iZXIodGhpcy5jdXJyZW50QW5zd2VyLmFuc3dlci5yZXNwb25zZSkKICAgIH0KICAgIHRoaXMuJHdhdGNoKCdjb21tZW50JywgKCkgPT4gdGhpcy5zZWxlY3RJdGVtKHRoaXMuYW5zd2VyKSkKICB9Cn0K"},{"version":3,"sources":["Ces.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Ces.vue","sourceRoot":"src/components/survey","sourcesContent":["<template>\n  <QuestionContainer\n    :status=\"status\"\n    :questionText=\"selectedQuestion.question[lang]\"\n    :isObligatory=\"selectedQuestion.is_obligatory\"\n    :color=\"color\">\n    <template v-slot:buttons>\n      <button-question\n        :questionType=\"selectedQuestion.type\"\n        :scale_type=selectedQuestion.scale_type\n        :min_scale=selectedQuestion.min_scale\n        :max_scale=selectedQuestion.max_scale\n        :button_design=selectedQuestion.button_design\n        :color_pattern=selectedQuestion.color_pattern\n        :custom_color=selectedQuestion.custom_color\n        big\n        labeled\n        :label_min=\"selectedQuestion.button_subtitle_min ? selectedQuestion.button_subtitle_min[lang] : ''\"\n        :label_max=\"selectedQuestion.button_subtitle_max? selectedQuestion.button_subtitle_max[lang]: ''\"\n        :onClick=\"(item) => selectItem(item)\"\n        :current_response=\"currentAnswer ? currentAnswer.answer.response : null\"\n        :language=\"lang\" />\n    </template>\n    <template v-slot:comment>\n      <div v-show=\"answer !== '' && selectedQuestion.comments_enabled\" class=\"subtitle\">\n        <div v-if=\"selectedQuestion.comment_question[lang] !== ''\">{{selectedQuestion.comment_question[lang]}}</div>\n        <input v-model=\"comment\" autogrow :placeholder=\"placeholder\" class=\"survey-input\" :rules=\"[rules.max]\" />\n      </div>\n    </template>\n  </QuestionContainer>\n</template>\n<script>\nimport QuestionContainer from './QuestionContainer'\nimport ButtonQuestion from './ButtonQuestionComponent'\nimport _ from 'lodash'\nimport SurveyUseCase from '../../arch/survey/usecase'\nconst surveyUseCase = new SurveyUseCase()\nexport default {\n  components: { ButtonQuestion, QuestionContainer },\n  props: {\n    selectedQuestion: {\n      type: Object\n    },\n    lang: {\n      type: String,\n      default: 'pt_BR'\n    },\n    onSelectAnswer: {\n      type: Function,\n      default: () => { }\n    },\n    color: {\n      type: String\n    },\n    status: {\n      type: Number,\n      default: 1\n    },\n    currentAnswer: {\n      type: Object\n    }\n  },\n  data () {\n    return {\n      comment: '',\n      answer: '',\n      rules: {\n        max: v => v.length <= 5000 || this.$t('general.rules.max_length') + ' 5000'\n      }\n    }\n  },\n  computed: {\n    placeholder () {\n      return surveyUseCase.getCommentPlaceholder(this.lang)\n    }\n  },\n  methods: {\n    selectItem: _.debounce(function (item) {\n      this.answer = item\n\n      const response = {\n        uuid: this.selectedQuestion.item_uuid,\n        type: this.selectedQuestion.type,\n        answer: {\n          response: item,\n          comment: this.comment,\n        }\n      }\n      this.onSelectAnswer(response)\n    }, 250)\n  },\n  mounted () {\n    if (this.currentAnswer?.answer?.comment) {\n      this.comment = this.currentAnswer.answer.comment\n    }\n    if (this.currentAnswer?.answer?.response != null) {\n      this.answer = Number(this.currentAnswer.answer.response)\n    }\n    this.$watch('comment', () => this.selectItem(this.answer))\n  }\n}\n</script>\n"]}]}