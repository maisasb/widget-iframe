{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/track/workplace/a2/frontend/widget/src/components/survey/Ces.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/components/survey/Ces.vue","mtime":1622576548911},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBRdWVzdGlvbkNvbnRhaW5lciBmcm9tICcuL1F1ZXN0aW9uQ29udGFpbmVyJwppbXBvcnQgQnV0dG9uUXVlc3Rpb24gZnJvbSAnLi9CdXR0b25RdWVzdGlvbkNvbXBvbmVudCcKaW1wb3J0IFN1cnZleVVzZUNhc2UgZnJvbSAnLi4vLi4vYXJjaC9zdXJ2ZXkvdXNlY2FzZScKY29uc3Qgc3VydmV5VXNlQ2FzZSA9IG5ldyBTdXJ2ZXlVc2VDYXNlKCkKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgQnV0dG9uUXVlc3Rpb24sIFF1ZXN0aW9uQ29udGFpbmVyIH0sCiAgcHJvcHM6IHsKICAgIHNlbGVjdGVkUXVlc3Rpb246IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgfSwKICAgIGxhbmc6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAncHRfQlInLAogICAgfSwKICAgIG9uU2VsZWN0QW5zd2VyOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICBkZWZhdWx0OiAoKSA9PiB7fSwKICAgIH0sCiAgICBjb2xvcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICB9LAogICAgc3RhdHVzOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMSwKICAgIH0sCiAgICBjdXJyZW50QW5zd2VyOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgIH0sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29tbWVudDogJycsCiAgICAgIGFuc3dlcjogJycsCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgbWF4OiB2ID0+IHYubGVuZ3RoIDw9IDUwMDAgfHwgdGhpcy4kdCgnZ2VuZXJhbC5ydWxlcy5tYXhfbGVuZ3RoJykgKyAnIDUwMDAnLAogICAgICB9LAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHBsYWNlaG9sZGVyKCkgewogICAgICByZXR1cm4gc3VydmV5VXNlQ2FzZS5nZXRDb21tZW50UGxhY2Vob2xkZXIodGhpcy5sYW5nKQogICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlbGVjdEl0ZW0oaXRlbSkgewogICAgICB0aGlzLmFuc3dlciA9IGl0ZW0KCiAgICAgIGNvbnN0IHJlc3BvbnNlID0gewogICAgICAgIHV1aWQ6IHRoaXMuc2VsZWN0ZWRRdWVzdGlvbi5pdGVtX3V1aWQsCiAgICAgICAgdHlwZTogdGhpcy5zZWxlY3RlZFF1ZXN0aW9uLnR5cGUsCiAgICAgICAgYW5zd2VyOiB7CiAgICAgICAgICByZXNwb25zZTogaXRlbSwKICAgICAgICAgIGNvbW1lbnQ6IHRoaXMuY29tbWVudCwKICAgICAgICB9LAogICAgICB9CiAgICAgIHRoaXMub25TZWxlY3RBbnN3ZXIocmVzcG9uc2UpCiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLmN1cnJlbnRBbnN3ZXI/LmFuc3dlcj8uY29tbWVudCkgewogICAgICB0aGlzLmNvbW1lbnQgPSB0aGlzLmN1cnJlbnRBbnN3ZXIuYW5zd2VyLmNvbW1lbnQKICAgIH0KICAgIGlmICh0aGlzLmN1cnJlbnRBbnN3ZXI/LmFuc3dlcj8ucmVzcG9uc2UgIT0gbnVsbCkgewogICAgICB0aGlzLmFuc3dlciA9IE51bWJlcih0aGlzLmN1cnJlbnRBbnN3ZXIuYW5zd2VyLnJlc3BvbnNlKQogICAgfQogICAgLy8gdGhpcy4kd2F0Y2goJ2NvbW1lbnQnLCAoKSA9PiB0aGlzLnNlbGVjdEl0ZW0odGhpcy5hbnN3ZXIpKQogIH0sCn0K"},{"version":3,"sources":["Ces.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Ces.vue","sourceRoot":"src/components/survey","sourcesContent":["<template>\n  <QuestionContainer\n    :status=\"status\"\n    :questionText=\"selectedQuestion.question[lang]\"\n    :isObligatory=\"selectedQuestion.is_obligatory\"\n    :color=\"color\"\n  >\n    <template v-slot:buttons>\n      <button-question\n        :questionType=\"selectedQuestion.type\"\n        :scale_type=\"selectedQuestion.scale_type\"\n        :min_scale=\"selectedQuestion.min_scale\"\n        :max_scale=\"selectedQuestion.max_scale\"\n        :button_design=\"selectedQuestion.button_design\"\n        :color_pattern=\"selectedQuestion.color_pattern\"\n        :custom_color=\"selectedQuestion.custom_color\"\n        big\n        labeled\n        :label_min=\"selectedQuestion.button_subtitle_min ? selectedQuestion.button_subtitle_min[lang] : ''\"\n        :label_max=\"selectedQuestion.button_subtitle_max ? selectedQuestion.button_subtitle_max[lang] : ''\"\n        :onClick=\"item => selectItem(item)\"\n        :current_response=\"currentAnswer ? currentAnswer.answer.response : null\"\n        :language=\"lang\"\n      />\n    </template>\n    <template v-slot:comment>\n      <div v-show=\"answer !== '' && selectedQuestion.comments_enabled\" class=\"subtitle\">\n        <div v-if=\"selectedQuestion.comment_question[lang] !== ''\">{{ selectedQuestion.comment_question[lang] }}</div>\n        <input\n          v-model=\"comment\"\n          autogrow\n          :placeholder=\"placeholder\"\n          class=\"survey-input\"\n          :rules=\"[rules.max]\"\n          @blur=\"selectItem(this.answer)\"\n        />\n      </div>\n    </template>\n  </QuestionContainer>\n</template>\n<script>\nimport QuestionContainer from './QuestionContainer'\nimport ButtonQuestion from './ButtonQuestionComponent'\nimport SurveyUseCase from '../../arch/survey/usecase'\nconst surveyUseCase = new SurveyUseCase()\nexport default {\n  components: { ButtonQuestion, QuestionContainer },\n  props: {\n    selectedQuestion: {\n      type: Object,\n    },\n    lang: {\n      type: String,\n      default: 'pt_BR',\n    },\n    onSelectAnswer: {\n      type: Function,\n      default: () => {},\n    },\n    color: {\n      type: String,\n    },\n    status: {\n      type: Number,\n      default: 1,\n    },\n    currentAnswer: {\n      type: Object,\n    },\n  },\n  data() {\n    return {\n      comment: '',\n      answer: '',\n      rules: {\n        max: v => v.length <= 5000 || this.$t('general.rules.max_length') + ' 5000',\n      },\n    }\n  },\n  computed: {\n    placeholder() {\n      return surveyUseCase.getCommentPlaceholder(this.lang)\n    },\n  },\n  methods: {\n    selectItem(item) {\n      this.answer = item\n\n      const response = {\n        uuid: this.selectedQuestion.item_uuid,\n        type: this.selectedQuestion.type,\n        answer: {\n          response: item,\n          comment: this.comment,\n        },\n      }\n      this.onSelectAnswer(response)\n    },\n  },\n  mounted() {\n    if (this.currentAnswer?.answer?.comment) {\n      this.comment = this.currentAnswer.answer.comment\n    }\n    if (this.currentAnswer?.answer?.response != null) {\n      this.answer = Number(this.currentAnswer.answer.response)\n    }\n    // this.$watch('comment', () => this.selectItem(this.answer))\n  },\n}\n</script>\n"]}]}