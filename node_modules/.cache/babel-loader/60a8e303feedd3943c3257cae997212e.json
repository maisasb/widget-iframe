{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/thread-loader/dist/cjs.js!/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js!/home/track/workplace/a2/frontend/widget/node_modules/eslint-loader/index.js??ref--13-0!/home/track/workplace/a2/frontend/widget/src/arch/survey/utils.js","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/arch/survey/utils.js","mtime":1622576548911},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/track/workplace/a2/frontend/widget/src/arch/survey/utils.js"],"names":["consts","enUS","ptBR","esES","colors","colors010","colors110","colors17","colors05","colors15","likertValues","likert_csat","value","CSAT_LIKERT","EXTREMELY_UNSATISFIED","label","UNSATISFIED","NEUTRAL","SATISFIED","EXTREMELY_SATISFIED","likert_5","CES_LIKERT_5","STRONGLY_DISAGREE","DISAGREE","AGREE","STRONGLY_AGREE","likert_7","CES_LIKERT_7","SOMEWHAT_DISAGREE","SOMEWHAT_AGREE","textualValues","CES_TEXTUAL_5","VERY_HARD","HARD","EASY","VERY_EASY","CES_TEXTUAL_7","EXTREMELY_HARD","EXTREMELY_EASY","optionOtherLabel","survey","new","other","commentPlaceholder","placeholder_comment","getLikertLabels","newValues","JSON","parse","stringify","map","likert","getTextualLabels","textual","multipleChoiceLetters","getScale","minScale","maxScale","reverse","scaleType","questionType","scaleArray","i","push","revert","getTextualScale","getLikertScale","likertScale","QUESTION_TYPE","CES","CES2","textualScale","isFilled","buttonDesign","roundedValue","getColor","index","colorPatern","customColor","getColorsArray","min","max","colorArray","array","slice","getCes2Question","ces2_question_likert","ces2_question","getCes2MinButtonScale","very_hard","extremely_hard","getCes2MaxButtonScale","very_easy","extremely_easy"],"mappings":"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","sourcesContent":["import  consts  from '../../consts'\nimport {enUS, ptBR, esES} from '../../utils/language'\n\n/**\n * The colors array for the different scales\n */\nconst colors = {\n  colors010: ['#b72124', '#d62027', '#ef5222', '#f46f21', '#faa822', '#ffca26', '#ecdb11', '#dedd37', '#c5d92d', '#afd136', '#65b54d'],\n  colors110: ['#d62027', '#ef5222', '#f46f21', '#faa822', '#ffca26', '#ecdb11', '#dedd37', '#c5d92d', '#afd136', '#65b54d'],\n  colors17: ['#a80b1e', '#f2243d', '#f5a623', '#fdc33e', '#c7d153', '#2acf65', '#15aa4a'],\n  colors05: ['#a80b1e', '#f2243d', '#f46f21', '#f5a623', '#2acf65', '#15aa4a'],\n  colors15: ['#a80b1e', '#f2243d', '#f5a623', '#2acf65', '#15aa4a']\n}\n/**\n * The likert values for the different scales\n */\nconst likertValues = {\n  likert_csat: [\n    { value: consts.CSAT_LIKERT.EXTREMELY_UNSATISFIED, label: 'extremely_unsatistied' },\n    { value: consts.CSAT_LIKERT.UNSATISFIED, label: 'unsatisfied' },\n    { value: consts.CSAT_LIKERT.NEUTRAL, label: 'neutral' },\n    { value: consts.CSAT_LIKERT.SATISFIED, label: 'satisfied' },\n    { value: consts.CSAT_LIKERT.EXTREMELY_SATISFIED, label: 'extremely_satistied' }\n  ],\n  likert_5: [\n    { value: consts.CES_LIKERT_5.STRONGLY_DISAGREE, label: 'strongly_disagree' },\n    { value: consts.CES_LIKERT_5.DISAGREE, label: 'disagree' },\n    { value: consts.CES_LIKERT_5.NEUTRAL, label: 'neutral' },\n    { value: consts.CES_LIKERT_5.AGREE, label: 'agree' },\n    { value: consts.CES_LIKERT_5.STRONGLY_AGREE, label: 'strongly_agree' }\n  ],\n  likert_7: [\n    { value: consts.CES_LIKERT_7.STRONGLY_DISAGREE, label: 'strongly_disagree' },\n    { value: consts.CES_LIKERT_7.DISAGREE, label: 'disagree' },\n    { value: consts.CES_LIKERT_7.SOMEWHAT_DISAGREE, label: 'somewhat_disagree' },\n    { value: consts.CES_LIKERT_7.NEUTRAL, label: 'neutral' },\n    { value: consts.CES_LIKERT_7.SOMEWHAT_AGREE, label: 'somewhat_agree' },\n    { value: consts.CES_LIKERT_7.AGREE, label: 'agree' },\n    { value: consts.CES_LIKERT_7.STRONGLY_AGREE, label: 'strongly_agree' }\n  ]\n}\n\nconst textualValues = {\n  5: [\n    { value: consts.CES_TEXTUAL_5.VERY_HARD, label: 'very_hard' },\n    { value: consts.CES_TEXTUAL_5.HARD, label: 'hard' },\n    { value: consts.CES_TEXTUAL_5.NEUTRAL, label: 'neutral' },\n    { value: consts.CES_TEXTUAL_5.EASY, label: 'easy' },\n    { value: consts.CES_TEXTUAL_5.VERY_EASY, label: 'very_easy' }\n  ],\n  7: [\n    { value: consts.CES_TEXTUAL_7.EXTREMELY_HARD, label: 'extremely_hard' },\n    { value: consts.CES_TEXTUAL_7.VERY_HARD, label: 'very_hard' },\n    { value: consts.CES_TEXTUAL_7.HARD, label: 'hard' },\n    { value: consts.CES_TEXTUAL_7.NEUTRAL, label: 'neutral' },\n    { value: consts.CES_TEXTUAL_7.EASY, label: 'easy' },\n    { value: consts.CES_TEXTUAL_7.VERY_EASY, label: 'very_easy' },\n    { value: consts.CES_TEXTUAL_7.EXTREMELY_EASY, label: 'extremely_easy' }\n  ]\n}\n\nexport const optionOtherLabel = {\n  'en_US': enUS.survey.new.other,\n  'pt_BR': ptBR.survey.new.other,\n  'es_ES': esES.survey.new.other\n}\n\nexport const commentPlaceholder = {\n  'en_US': enUS.survey.new.placeholder_comment,\n  'pt_BR': ptBR.survey.new.placeholder_comment,\n  'es_ES': esES.survey.new.placeholder_comment\n}\n\n/**\n * Get the i18n translations to all the survey languages\n * to display the language equal the language of the survey\n * @param {the array of likert values} likertValues\n */\nfunction getLikertLabels (likertValues) {\n  const newValues = JSON.parse(JSON.stringify(likertValues))\n  newValues.map(likert => {\n    likert.label = {\n      'en_US': enUS.survey.likert[likert.label],\n      'pt_BR': ptBR.survey.likert[likert.label],\n      'es_ES': esES.survey.likert[likert.label]\n    }\n  })\n  return newValues\n}\n\n/**\n * Get the i18n translations to all the survey languages\n * to display the language equal the language of the survey\n * @param {the array of textual values} textualValues\n */\nfunction getTextualLabels (textualValues) {\n  const newValues = JSON.parse(JSON.stringify(textualValues))\n  newValues.map(likert => {\n    likert.label = {\n      'en_US': enUS.survey.textual[likert.label],\n      'pt_BR': ptBR.survey.textual[likert.label],\n      'es_ES': esES.survey.textual[likert.label]\n    }\n  })\n  return newValues\n}\n\nexport const multipleChoiceLetters = {\n  0: 'A',\n  1: 'B',\n  2: 'C',\n  3: 'D',\n  4: 'E',\n  5: 'F',\n  6: 'G',\n  7: 'H',\n  8: 'I',\n  9: 'J',\n  10: 'K',\n  11: 'L',\n  12: 'M',\n  13: 'N',\n  14: 'O',\n  15: 'P',\n  16: 'Q',\n  17: 'R',\n  18: 'S',\n  19: 'T',\n  20: 'U',\n  21: 'V',\n  22: 'X',\n  23: 'Z'\n}\n\n/**\n * Get the scale array for the question, number , likert or inverted\n * @param {min_scale} minScale\n * @param {max_scale} maxScale\n * @param {inverted_scale} reverse\n * @param {scale_type} scaleType\n * @param {the type of the question item} questionType\n */\nexport function getScale (minScale, maxScale, reverse, scaleType, questionType) {\n  let scaleArray = []\n  if (scaleType === 0) {\n    for (let i = minScale; i <= maxScale; i++) {\n      scaleArray.push(i)\n    }\n    if (reverse) {\n      scaleArray = revert(scaleArray)\n    }\n  } else if (scaleType === 2) {\n    scaleArray = getTextualScale(maxScale)\n  } else {\n    scaleArray = getLikertScale(questionType, maxScale)\n  }\n\n  return scaleArray\n}\n/**\n * Get scale array based on likert questions\n * @param {the question type(CES of CSAT)} questionType\n * @param {max_scale} maxScale\n */\nexport function getLikertScale (questionType, maxScale) {\n  let likertScale = []\n  if (questionType === consts.QUESTION_TYPE.CES || questionType === consts.QUESTION_TYPE.CES2) {\n    if (maxScale === 7) {\n      likertScale = [...likertValues.likert_7]\n    } else {\n      likertScale = [...likertValues.likert_5]\n    }\n  } else {\n    likertScale = [...likertValues.likert_csat]\n  }\n\n  return getLikertLabels(likertScale)\n}\n\n/**\n * Get scale array based on textual questions\n * @param {The max scale to know what labels to use} maxScale\n */\nexport function getTextualScale (maxScale) {\n  let textualScale = [...textualValues[maxScale]]\n\n  return getTextualLabels(textualScale)\n}\n\n/**\n * Return if the question button is filled with background or bordered\n * @param {button_design} buttonDesign\n */\nexport function isFilled (buttonDesign) {\n  return !!(buttonDesign === 1 || buttonDesign === 3)\n}\n/**\n * Return the radius of the question button according scale type and button design\n * @param {button_design} buttonDesign\n * @param {scale_type} scaleType\n */\nexport function roundedValue (buttonDesign, scaleType) {\n  return buttonDesign === 1 || buttonDesign === 2 || scaleType === 1 ? '1.5px' : '100%'\n}\n/**\n * Get button color based on index and color pattern\n * @param {the index of the button in the array} index\n * @param {color_pattern} colorPatern\n * @param {the colors array based on scale} colors\n * @param {custom_color chosed by user} customColor\n */\nexport function getColor (index, colorPatern, colors, customColor) {\n  if (colorPatern === 1) {\n    return colors[index]// Track standard\n  }\n  if (colorPatern === 2) {\n    return '#aaabb3'// Gray scale\n  }\n  return customColor // Custom\n}\n\n/**\n * Get track standard array of colors based on scale\n * @param {min_scale} minScale\n * @param {max_scale} maxScale\n * @param {inverted_scale} reverse\n */\nexport function getColorsArray (minScale, maxScale, reverse) {\n  const min = minScale\n  const max = maxScale\n  let colorArray = []\n  if (min === 0 && max === 10) {\n    colorArray = colors.colors010\n  } else if (min === 1 && max === 10) {\n    colorArray = colors.colors110\n  } else if (min === 1 && max === 7) {\n    colorArray = colors.colors17\n  } else if (min === 0 && max === 5) {\n    colorArray = colors.colors05\n  } else {\n    colorArray = colors.colors15\n  }\n  if (reverse) {\n    colorArray = revert(colorArray)\n  }\n  return colorArray\n}\n\nfunction revert (array) {\n  return array.slice().reverse()\n}\n\nexport function getCes2Question (scaleType) {\n  if (scaleType === 1) {\n    return {\n      'en_US': enUS.survey.new.ces2_question_likert,\n      'pt_BR': ptBR.survey.new.ces2_question_likert,\n      'es_ES': esES.survey.new.ces2_question_likert\n    }\n  }\n  return {\n    'en_US': enUS.survey.new.ces2_question,\n    'pt_BR': ptBR.survey.new.ces2_question,\n    'es_ES': esES.survey.new.ces2_question\n  }\n}\n\n/**\n * Method that return button scale based on max scale (very hard or extremely)\n * @param {question max scale} maxScale\n */\nexport function getCes2MinButtonScale (maxScale) {\n  if (maxScale === 5) {\n    return {\n      'en_US': enUS.survey.textual.very_hard,\n      'pt_BR': ptBR.survey.textual.very_hard,\n      'es_ES': esES.survey.textual.very_hard\n    }\n  }\n  return {\n    'en_US': enUS.survey.textual.extremely_hard,\n    'pt_BR': ptBR.survey.textual.extremely_hard,\n    'es_ES': esES.survey.textual.extremely_hard\n  }\n}\n\n/**\n * Method that return button scale based on max scale (very easy or extremely)\n * @param {question max scale} maxScale\n */\nexport function getCes2MaxButtonScale (maxScale) {\n  if (maxScale === 5) {\n    return {\n      'en_US': enUS.survey.textual.very_easy,\n      'pt_BR': ptBR.survey.textual.very_easy,\n      'es_ES': esES.survey.textual.very_easy\n    }\n  }\n  return {\n    'en_US': enUS.survey.textual.extremely_easy,\n    'pt_BR': ptBR.survey.textual.extremely_easy,\n    'es_ES': esES.survey.textual.extremely_easy\n  }\n}\n"]}]}