{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js!/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/track/workplace/a2/frontend/widget/src/components/MultipleChoice.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/components/MultipleChoice.vue","mtime":1618504560311},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MultipleChoice.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,iBAAA,MAAA,qBAAA;AAEA,OAAA,CAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,iBAAA,EAAA;AAAA,GADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KADA;AAIA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAJA;AAQA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA,KARA;AAYA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAZA;AAeA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAfA;AAmBA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAnBA,GAFA;AAyBA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,KADA,EACA;AACA,UAAA,KAAA,IAAA,CAAA,KAAA,gBAAA,CAAA,gBAAA,EAAA;AACA,aAAA,MAAA,GAAA,IAAA;AACA,aAAA,YAAA,CAAA,IAAA;AACA;AACA;AANA,GAzBA;AAiCA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,aAAA,aAAA,CAAA,mBAAA,CAAA,KAAA,IAAA,CAAA;AACA,KAHA;AAIA,IAAA,WAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,YAAA,KAAA,gBAAA,CAAA,SAAA,EAAA;AACA,cAAA,OAAA,sBAAA,KAAA,gBAAA,CAAA,OAAA,CAAA;;AACA,eAAA,IAAA,CAAA,GAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA,EAAA;AACA,gBAAA,CAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,CAAA,CAAA;AACA,gBAAA,IAAA,GAAA,OAAA,CAAA,CAAA,CAAA;AACA,YAAA,OAAA,CAAA,CAAA,CAAA,GAAA,OAAA,CAAA,CAAA,CAAA;AACA,YAAA,OAAA,CAAA,CAAA,CAAA,GAAA,IAAA;AACA;;AACA,iBAAA,OAAA;AACA;;AACA,eAAA,KAAA,gBAAA,CAAA,OAAA;AACA;AAbA,KAJA;AAmBA,IAAA,WAnBA,yBAmBA;AACA,UAAA,WAAA,GAAA,CAAA,KAAA,OAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,KAAA,KAAA,KAAA,gBAAA,CAAA,gBAAA;;AACA,UAAA,CAAA,WAAA,EAAA;AACA,aAAA,YAAA;AACA;;AAEA,aAAA,WAAA;AACA;AA1BA,GAjCA;AA6DA,EAAA,IA7DA,kBA6DA;AAAA;;AACA,WAAA;AACA,MAAA,OAAA,EAAA,aAAA,CAAA,wBAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,OAAA,EAAA,EAJA;AAKA,MAAA,KAAA,EAAA;AACA,QAAA,GAAA,EAAA,aAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,MAAA,IAAA,IAAA,IAAA,KAAA,CAAA,EAAA,CAAA,0BAAA,IAAA,OAAA;AAAA;AADA;AALA,KAAA;AASA,GAvEA;AAwEA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,MADA,EACA,OADA,EACA;AAAA;;AACA,UAAA,CAAA,KAAA,gBAAA,CAAA,gBAAA,EAAA;AACA,aAAA,kBAAA;AACA,aAAA,OAAA,GAAA,EAAA;;AACA,YAAA,MAAA,EAAA;AACA,eAAA,KAAA,GAAA,IAAA;AACA;AACA;;AAEA,UAAA,MAAA,IAAA,IAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,WAAA,CAAA,SAAA,CAAA,UAAA,UAAA;AAAA,iBAAA,UAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AAAA,SAAA,CAAA;AACA,YAAA,GAAA,GAAA,SAAA,KAAA;;AACA,YAAA,KAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAA,SAAA,CAAA,QAAA,CAAA,iBAAA,CAAA,EAAA;AACA,eAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAA,SAAA,CAAA,MAAA,CAAA,iBAAA;AACA,cAAA,WAAA,GAAA,KAAA,OAAA,CAAA,SAAA,CAAA,UAAA,UAAA;AAAA,mBAAA,IAAA,CAAA,SAAA,CAAA,UAAA,MAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA;AAAA,WAAA,CAAA;AACA,eAAA,OAAA,CAAA,MAAA,CAAA,WAAA,EAAA,CAAA;AACA,SAJA,MAIA;AACA,eAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAA,SAAA,CAAA,GAAA,CAAA,iBAAA;AACA,eAAA,OAAA,CAAA,IAAA,CAAA,MAAA;AACA;AACA;;AAEA,UAAA,CAAA,OAAA,EAAA;AACA,aAAA,UAAA;AACA;AACA,KA1BA;AA2BA,IAAA,kBA3BA,gCA2BA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,gBAAA,CAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,aAAA,KAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,SAAA,CAAA,MAAA,CAAA,iBAAA;AACA;AACA,KA/BA;AAgCA,IAAA,UAAA,EAAA,CAAA,CAAA,QAAA,CAAA,YAAA;AACA,UAAA,QAAA,GAAA;AACA,QAAA,IAAA,EAAA,KAAA,gBAAA,CAAA,SADA;AAEA,QAAA,IAAA,EAAA,KAAA,gBAAA,CAAA,IAFA;AAGA,QAAA,MAAA,EAAA;AACA,UAAA,QAAA,EAAA,KAAA,OADA;AAEA,UAAA,OAAA,EAAA,KAAA,OAFA;AAGA,UAAA,YAAA,EAAA,KAAA;AAHA;AAHA,OAAA;AASA,WAAA,cAAA,CAAA,QAAA;AACA,KAXA,EAWA,GAXA,CAhCA;AA4CA,IAAA,OA5CA,qBA4CA;AACA,UAAA,KAAA,gBAAA,CAAA,OAAA,EAAA;AACA,aAAA,IAAA,GAAA,IAAA,KAAA,gBAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EAAA;AACA,iBAAA,GAAA;AACA;AACA;AACA,KAlDA;AAmDA,IAAA,YAnDA,0BAmDA;AACA,WAAA,OAAA,GAAA,EAAA;AACA;AArDA,GAxEA;AA+HA,EAAA,OA/HA,qBA+HA;AAAA;;AACA,SAAA,SAAA,CAAA,YAAA;AAAA;;AACA,UAAA,yBAAA,MAAA,CAAA,aAAA,uGAAA,MAAA,gFAAA,QAAA,KAAA,IAAA,EAAA;AACA,YAAA;AACA,cAAA,eAAA,GAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA,QAAA;AACA,UAAA,eAAA,CAAA,OAAA,CAAA,UAAA,QAAA,EAAA;AACA,YAAA,MAAA,CAAA,YAAA,CAAA,QAAA,EAAA,IAAA;AACA,WAFA;AAGA,SALA,CAKA,OAAA,KAAA,EAAA;AACA;AACA,cAAA,MAAA,GAAA,MAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,mBAAA,IAAA,CAAA,SAAA,CAAA,MAAA,EAAA,QAAA,CAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,WAFA,CAAA;;AAGA,UAAA,MAAA,CAAA,YAAA,CAAA,MAAA,EAAA,IAAA;AACA;AACA,OAdA,CAeA;;;AACA,UAAA,0BAAA,MAAA,CAAA,aAAA,gFAAA,YAAA,KAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,KAAA,GAAA,MAAA,CAAA,aAAA,CAAA,YAAA;AACA;;AACA,MAAA,MAAA,CAAA,MAAA,CAAA,OAAA,EAAA;AAAA,eAAA,MAAA,CAAA,UAAA,EAAA;AAAA,OAAA;;AAEA,mCAAA,MAAA,CAAA,aAAA,2EAAA,sBAAA,MAAA,kDAAA,sBAAA,OAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA,OAAA;AACA;;AACA,MAAA,MAAA,CAAA,MAAA,CAAA,SAAA,EAAA;AAAA,eAAA,MAAA,CAAA,UAAA,EAAA;AAAA,OAAA;AACA,KAzBA;AA0BA;AA1JA,CAAA","sourcesContent":["<template>\n  <QuestionContainer\n    :badgeText=\"$t('survey.question_type.multiple_choice')\"\n    :status=\"status\"\n    :questionText=\"selectedQuestion.question[lang]\"\n    :isObligatory=\"selectedQuestion.is_obligatory\"\n    :color=\"color\">\n    <template v-slot:buttons>\n      <div :class=\"selectedQuestion.horizontal_align ? 'flex ' : 'inline-block'\">\n        <div v-for=\"(option,index) in optionsList\" :key=\"index\">\n          <div class=\"option\" @click=\"selectOption(option)\" :ref=\"'ref_'+index\">\n            <div class=\"choice notranslate\"> {{letters[index]}} </div>\n            <div class=\"text\"> {{option[lang]}}</div>\n          </div>\n        </div>\n      </div>\n      <div v-if=\"selectedQuestion.option_other\">\n        <div class=\"flex\">\n          <div class=\"q-mt-md q-mr-sm other\"> {{optionOther}} </div>\n          <q-input dense v-model=\"other\" style=\"width: 50%\" class=\"survey-input\" />\n        </div>\n      </div>\n    </template>\n    <template v-slot:comment>\n      <div v-show=\"showComment\" class=\"subtitle\">\n        <div v-if=\"selectedQuestion.comment_question[lang] !== ''\"> {{selectedQuestion.comment_question[lang]}}</div>\n        <q-input v-model=\"comment\" autogrow :placeholder=\"$t('survey.new.placeholder_comment')\" :rules=\"[rules.max]\" class=\"survey-input\" />\n      </div>\n    </template>\n  </QuestionContainer>\n</template>\n<script>\nimport QuestionContainer from './QuestionContainer'\n\nimport _ from 'lodash'\nexport default {\n  components: { QuestionContainer },\n  props: {\n    selectedQuestion: {\n      type: Object\n    },\n    lang: {\n      type: String,\n      default: 'pt_BR'\n    },\n    onSelectAnswer: {\n      type: Function,\n      default: () => { }\n    },\n    color: {\n      type: String\n    },\n    status: {\n      type: Number,\n      default: 1\n    },\n    currentAnswer: {\n      type: Object\n    }\n  },\n  watch: {\n    other (value) {\n      if (value && !this.selectedQuestion.multiple_answers) {\n        this.answer = null\n        this.selectOption(null)\n      }\n    }\n  },\n  computed: {\n    optionOther () {\n      return surveyUseCase.getOptionOtherLabel(this.lang)\n    },\n    optionsList: {\n      get () {\n        if (this.selectedQuestion.randomize) {\n          const options = [...this.selectedQuestion.options]\n          for (let i = options.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * i)\n            const temp = options[i]\n            options[i] = options[j]\n            options[j] = temp\n          }\n          return options\n        }\n        return this.selectedQuestion.options\n      }\n    },\n    showComment () {\n      const showcomment = (this.options.length > 0 || this.other) && this.selectedQuestion.comments_enabled\n      if (!showcomment) {\n        this.clearComment()\n      }\n\n      return showcomment\n    }\n  },\n  data () {\n    return {\n      letters: surveyUseCase.getMultipleChoiceLetters(),\n      options: [],\n      other: null,\n      comment: '',\n      rules: {\n        max: v => v.length <= 5000 || this.$t('general.rules.max_length') + ' 5000'\n      }\n    }\n  },\n  methods: {\n    selectOption (option, partial) {\n      if (!this.selectedQuestion.multiple_answers) {\n        this.clearSelectedItems()\n        this.options = []\n        if (option) {\n          this.other = null\n        }\n      }\n\n      if (option != null) {\n        const index = this.optionsList.findIndex(optionlist => optionlist[this.lang] === option[this.lang])\n        const ref = 'ref_' + index\n        if (this.$refs[ref][0].classList.contains('option_selected')) {\n          this.$refs[ref][0].classList.remove('option_selected')\n          const optionIndex = this.options.findIndex(optionTemp => JSON.stringify(optionTemp) === JSON.stringify(option))\n          this.options.splice(optionIndex, 1)\n        } else {\n          this.$refs[ref][0].classList.add('option_selected')\n          this.options.push(option)\n        }\n      }\n\n      if (!partial) {\n        this.selectItem()\n      }\n    },\n    clearSelectedItems () {\n      for (let i = 0; i < this.selectedQuestion.options.length; i++) {\n        this.$refs['ref_' + i][0].classList.remove('option_selected')\n      }\n    },\n    selectItem: _.debounce(function () {\n      const response = {\n        uuid: this.selectedQuestion.item_uuid,\n        type: this.selectedQuestion.type,\n        answer: {\n          response: this.options,\n          comment: this.comment,\n          option_other: this.other\n        }\n      }\n      this.onSelectAnswer(response)\n    }, 250),\n    getLang () {\n      if (this.selectedQuestion.options) {\n        for (let key in this.selectedQuestion.options[0]) {\n          return key\n        }\n      }\n    },\n    clearComment () {\n      this.comment = ''\n    }\n  },\n  mounted () {\n    this.$nextTick(() => {\n      if (this.currentAnswer?.answer?.response != null) {\n        try {\n          const currentResponse = this.currentAnswer.answer.response\n          currentResponse.forEach(response => {\n            this.selectOption(response, true)\n          })\n        } catch (error) {\n          // Selected question camming from email\n          const option = this.selectedQuestion.options.find(option => {\n            return JSON.stringify(option).includes(this.currentAnswer.answer.response)\n          })\n          this.selectOption(option, true)\n        }\n      }\n      // eslint-disable-next-line\n      if (this.currentAnswer?.option_other != null) {\n        this.other = this.currentAnswer.option_other\n      }\n      this.$watch('other', () => this.selectItem())\n\n      if (this.currentAnswer?.answer?.comment) {\n        this.comment = this.currentAnswer.answer.comment\n      }\n      this.$watch('comment', () => this.selectItem())\n    })\n  }\n}\n</script>\n<style scoped>\n.option {\n  color: #7f8fa4;\n  font-size: 16px;\n\n  margin-bottom: 10px;\n  margin-right: 5px;\n  cursor: pointer;\n\n  border: 1px solid #828282;\n  border-radius: 16px;\n  padding: 5px 10px;\n  /* min-width: 280px; */\n  display: flex;\n}\n\n.option .choice {\n  color: #333759;\n  font-weight: 600;\n  opacity: 0.4;\n  margin-right: 20px;\n  display: inline-block;\n}\n.option .text {\n  display: inline-block;\n}\n.option_selected {\n  background-color: rgba(219, 219, 219, 0.74);\n}\n.option:hover:not(.option_selected) {\n  background-color: rgba(238, 238, 238, 0.637);\n}\n.other {\n  color: #333759;\n}\n</style>\n"],"sourceRoot":"src/components"}]}