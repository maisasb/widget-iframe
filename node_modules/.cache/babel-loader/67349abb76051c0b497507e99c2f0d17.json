{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/thread-loader/dist/cjs.js!/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js!/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/track/workplace/a2/frontend/widget/src/views/Widget/Widget.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/views/Widget/Widget.vue","mtime":1618598137083},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3RyYWNrL3dvcmtwbGFjZS9hMi9mcm9udGVuZC93aWRnZXQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvaG9tZS90cmFjay93b3JrcGxhY2UvYTIvZnJvbnRlbmQvd2lkZ2V0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwppbXBvcnQgeyBtYXBNdXRhdGlvbnMsIG1hcFN0YXRlIH0gZnJvbSAidnVleCI7CmltcG9ydCB1c2VJZnJhbWVDb250cm9sIGZyb20gIi4uLy4uL2hvb2tzL2lmcmFtZSI7CmltcG9ydCBCb3ggZnJvbSAiLi9Cb3giOwppbXBvcnQgV2lkZ2V0VXNlQ2FzZSBmcm9tICIuLi8uLi9hcmNoL3dpZGdldC91c2VjYXNlIjsKdmFyIHdpZGdldFVzZUNhc2UgPSBuZXcgV2lkZ2V0VXNlQ2FzZSgpOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQm94OiBCb3gKICB9LAogIHByb3BzOiB7CiAgICBjb25maWc6IE9iamVjdAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHdpZGdldDogbnVsbAogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZSh7CiAgICBjdXN0b21lcjogZnVuY3Rpb24gY3VzdG9tZXIoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnN1cnZleS5jdXN0b21lcjsKICAgIH0sCiAgICB0b2tlbjogZnVuY3Rpb24gdG9rZW4oc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnN1cnZleS50b2tlbjsKICAgIH0sCiAgICBzaG93OiBmdW5jdGlvbiBzaG93KHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5zdXJ2ZXkuc2hvdzsKICAgIH0KICB9KSksCiAgbWV0aG9kczogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBNdXRhdGlvbnMoewogICAgc2V0VG9rZW46ICJzdXJ2ZXkvc2V0VG9rZW4iLAogICAgc2V0Q3VzdG9tZXI6ICJzdXJ2ZXkvc2V0Q3VzdG9tZXIiLAogICAgc2hvd1dpZGdldDogInN1cnZleS9zaG93V2lkZ2V0IiwKICAgIHNldEVkaXRNb2RlOiAic3VydmV5L3NldEVkaXRNb2RlIgogIH0pKSwge30sIHsKICAgIGdldFdpZGdldDogZnVuY3Rpb24gZ2V0V2lkZ2V0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gd2lkZ2V0VXNlQ2FzZS5nZXRPbmUoX3RoaXMudG9rZW4pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpcy53aWRnZXQgPSByZXNwb25zZTsgLy9SZW1vdmUgbm9uIHF1ZXN0aW9uIGl0ZW1zCgogICAgICAgICAgICAgICAgX3RoaXMud2lkZ2V0ID0gd2lkZ2V0VXNlQ2FzZS5yZW1vdmVOb25RdWVzdGlvbkl0ZW1zKF90aGlzLndpZGdldCk7IC8vU2V0IHVzZXIgbGFuZ3VhZ2UKCiAgICAgICAgICAgICAgICB3aWRnZXRVc2VDYXNlLnNldExhbmd1YWdlKF90aGlzLndpZGdldCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRJZnJhbWVEYXRhOiBmdW5jdGlvbiBnZXRJZnJhbWVEYXRhKCkgewogICAgICB2YXIgaWZyYW1lID0gdXNlSWZyYW1lQ29udHJvbCgpOwogICAgICBpZnJhbWUudXBkYXRlRGF0YUxpc3RlbmVyKCk7CiAgICAgIGlmcmFtZS5nZXRUb2tlbktleSgpOwogICAgfSwKICAgIGdldENvbmZpZ0RhdGE6IGZ1bmN0aW9uIGdldENvbmZpZ0RhdGEoKSB7CiAgICAgIGlmICh0aGlzLmNvbmZpZykgewogICAgICAgIHRoaXMuc2V0VG9rZW4odGhpcy5jb25maWcua2V5KTsKICAgICAgICB0aGlzLnNldEN1c3RvbWVyKHRoaXMuY29uZmlnLmN1c3RvbWVyKTsKICAgICAgICB0aGlzLnNldEVkaXRNb2RlKHRoaXMuY29uZmlnLmVkaXQpOwogICAgICB9CiAgICB9LAogICAgc2hvd1dpZGdldEJ5VXNlcjogZnVuY3Rpb24gc2hvd1dpZGdldEJ5VXNlcigpIHsKICAgICAgcmV0dXJuIHdpZGdldFVzZUNhc2UuY2FuU2hvdyh0aGlzLndpZGdldCk7CiAgICB9LAogICAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBzaG93LCBkZWxheSwgdm07CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzMi5nZXRJZnJhbWVEYXRhKCk7IC8vR2V0IGRhdGEgaW4gaWZyYW1lCgoKICAgICAgICAgICAgICAgIF90aGlzMi5nZXRDb25maWdEYXRhKCk7IC8vR2V0IGRhdGEgaW4gY2xhc3MgY29uZmlnCgoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuZ2V0V2lkZ2V0KCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIHNob3cgPSBfdGhpczIuc2hvd1dpZGdldEJ5VXNlcihfdGhpczIud2lkZ2V0KTsKCiAgICAgICAgICAgICAgICBpZiAoc2hvdykgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgZGVsYXkgPSBfdGhpczIud2lkZ2V0LmRlbGF5IHx8IDA7CiAgICAgICAgICAgICAgICB2bSA9IF90aGlzMjsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAvLyBzdGFydFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKQogICAgICAgICAgICAgICAgICB2bS5zaG93V2lkZ2V0KHNob3cpOwogICAgICAgICAgICAgICAgfSwgZGVsYXkgKiAxMDAwKTsKICAgICAgICAgICAgICAgIHdpZGdldFVzZUNhc2Uuc2V0U2hvd0F0KCk7CiAgICAgICAgICAgICAgICB3aWRnZXRVc2VDYXNlLnBvc3RPcGVuQ291bnRlcigpOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSksCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuc2V0dXAoKTsKICB9Cn07"},{"version":3,"sources":["Widget.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <Box :widget=\"widget\" v-if=\"widget && show\" />\n</template>\n<script>\nimport { mapMutations, mapState } from \"vuex\";\nimport useIframeControl from \"../../hooks/iframe\";\nimport Box from \"./Box\";\n\nimport WidgetUseCase from \"../../arch/widget/usecase\";\nconst widgetUseCase = new WidgetUseCase();\n\nexport default {\n  components: { Box },\n  props: {\n    config: Object,\n  },\n  data() {\n    return {\n      widget: null,\n    };\n  },\n  computed: {\n    ...mapState({\n      customer: (state) => state.survey.customer,\n      token: (state) => state.survey.token,\n      show: (state) => state.survey.show,\n    }),\n  },\n  methods: {\n    ...mapMutations({\n      setToken: \"survey/setToken\",\n      setCustomer: \"survey/setCustomer\",\n      showWidget: \"survey/showWidget\",\n      setEditMode: \"survey/setEditMode\",\n    }),\n    async getWidget() {\n      const response = await widgetUseCase.getOne(this.token);\n      this.widget = response;\n\n      //Remove non question items\n      this.widget = widgetUseCase.removeNonQuestionItems(this.widget);\n\n      //Set user language\n      widgetUseCase.setLanguage(this.widget);\n    },\n    getIframeData() {\n      const iframe = useIframeControl();\n      iframe.updateDataListener();\n      iframe.getTokenKey();\n    },\n    getConfigData() {\n      if (this.config) {\n        this.setToken(this.config.key);\n        this.setCustomer(this.config.customer);\n        this.setEditMode(this.config.edit);\n      }\n    },\n    showWidgetByUser() {\n      return widgetUseCase.canShow(this.widget);\n    },\n    async setup() {\n      this.getIframeData(); //Get data in iframe\n      this.getConfigData(); //Get data in class config\n      await this.getWidget();\n      const show = this.showWidgetByUser(this.widget);\n      if (!show) {\n        return;\n      }\n\n      const delay = this.widget.delay || 0;\n      const vm = this;\n      setTimeout(() => {\n        // startTime = new Date().getTime()\n        vm.showWidget(show);\n      }, delay * 1000);\n\n      widgetUseCase.setShowAt();\n      widgetUseCase.postOpenCounter();\n    },\n  },\n  created() {\n    this.setup();\n  },\n};\n</script>\n"],"sourceRoot":"src/views/Widget"}]}