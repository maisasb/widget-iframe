{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js!/home/track/workplace/a2/frontend/widget/node_modules/eslint-loader/index.js??ref--13-0!/home/track/workplace/a2/frontend/widget/src/arch/widget/usecase.js","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/arch/widget/usecase.js","mtime":1620908067435},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/track/workplace/a2/frontend/widget/src/arch/widget/usecase.js"],"names":["WidgetService","consts","store","getUserLanguage","getSurveyLanguage","setStorage","widgetStorage","localStorage","setItem","state","survey","token","JSON","stringify","getStorage","parse","getItem","WidgetUseCase","widgetService","getOne","widget","show_widget","SHOW_WIDGET","ONCE","RECURRENTLY","show","answered_at","date","Date","setDate","getDate","days_after_response","getTime","show_at","days_after_decline","postOpenCounter","jump_rules_enabled","items","filter","item","type","QUESTION_TYPE","LABEL","IMAGE","userLang","lang","surveyPublicHash","answers","postPartialAnswer","response","setAnsweredAt","postCompleteAnswer","customer","data","checkCustomerRecurrence"],"mappings":"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","sourcesContent":["import WidgetService from './service'\nimport consts from '../../consts'\nimport store from '../../store'\nimport { getUserLanguage, getSurveyLanguage } from '../../utils/language'\n\n/**\n * Set widgetStorage in localStorage\n * show_at = timestamp that widget was view by user\n * answered_at = timestamp that user answer the widget\n * @param {widgetStorage} widgetStorage\n */\nconst setStorage = widgetStorage => {\n  localStorage.setItem(store.state.survey.token, JSON.stringify(widgetStorage))\n}\n/**\n * Get widgetStorage in localStorage\n */\nconst getStorage = () => {\n  const widgetStorage = JSON.parse(localStorage.getItem(store.state.survey.token))\n  return widgetStorage\n}\n\nexport default class WidgetUseCase {\n  getOne(token) {\n    const widgetService = new WidgetService()\n    return widgetService.getOne(token)\n  }\n  canShow(widget) {\n    const widgetStorage = getStorage()\n    if (!widgetStorage) {\n      // Dont have storage setted, show widget\n      return true\n    }\n\n    if (widget.show_widget === consts.SHOW_WIDGET.ONCE) {\n      // If have storage and is setted, don't show widget\n      if (widgetStorage) {\n        return false\n      }\n    }\n\n    if (widget.show_widget === consts.SHOW_WIDGET.RECURRENTLY) {\n      let show = false\n      if (widgetStorage.answered_at) {\n        // Check days of response is more than condition\n        let date = new Date(widgetStorage.answered_at)\n        date.setDate(date.getDate() + widget.days_after_response)\n        if (new Date().getTime() >= date.getTime()) {\n          show = true\n        }\n      }\n      if (widgetStorage.show_at && !widgetStorage.answered_at) {\n        // Check days of decline is more than condition\n        let date = new Date(widgetStorage.show_at)\n        date.setDate(date.getDate() + widget.days_after_decline)\n        if (new Date().getTime() >= date.getTime()) {\n          show = true\n        }\n      }\n      return show\n    }\n    return true\n  }\n  setShowAt() {\n    const widgetStorage = getStorage()\n    if (!widgetStorage) {\n      setStorage({ show_at: new Date().getTime() })\n    }\n  }\n  /**\n   * Set answered at in localStorage\n   */\n  setAnsweredAt() {\n    const widgetStorage = getStorage()\n    if (!widgetStorage) {\n      return\n    }\n    widgetStorage.answered_at = new Date().getTime()\n    setStorage(widgetStorage)\n  }\n  postOpenCounter() {\n    const widgetService = new WidgetService()\n    widgetService.postOpenCounter(store.state.survey.token)\n  }\n  /**\n   * Remove non question items from survey\n   * Like IMAGE and LABEL\n   */\n  removeNonQuestionItems(widget) {\n    if (widget.survey.jump_rules_enabled) {\n      return\n    }\n    widget.survey.items = widget.survey.items.filter(\n      item => item.type !== consts.QUESTION_TYPE.LABEL && item.type !== consts.QUESTION_TYPE.IMAGE,\n    )\n    return widget\n  }\n  setLanguage(widget) {\n    const userLang = getUserLanguage()\n    const lang = getSurveyLanguage(userLang, widget)\n    return lang\n  }\n  async postPartialAnswer(surveyPublicHash, answers) {\n    const widgetService = new WidgetService()\n    const response = await widgetService.postPartialAnswer(surveyPublicHash, answers)\n    this.setAnsweredAt()\n    return response\n  }\n  async postCompleteAnswer(surveyPublicHash, answers) {\n    const widgetService = new WidgetService()\n    const response = await widgetService.postCompleteAnswer(surveyPublicHash, answers)\n    this.setAnsweredAt()\n    return response\n  }\n\n  checkCustomerRecurrence(token, customer){\n    const widgetService = new WidgetService()\n    const data = {\n      customer\n    }\n    return widgetService.checkCustomerRecurrence(token, data)\n  }\n}\n"]}]}