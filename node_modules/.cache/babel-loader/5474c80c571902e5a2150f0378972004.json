{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js!/home/track/workplace/a2/frontend/widget/node_modules/eslint-loader/index.js??ref--13-0!/home/track/workplace/a2/frontend/widget/src/hooks/iframe.js","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/hooks/iframe.js","mtime":1618838230181},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoLmpzIjsKaW1wb3J0IHN0b3JlIGZyb20gJy4uL3N0b3JlJzsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlSWZyYW1lQ29udHJvbCgpIHsKICBmdW5jdGlvbiBnZXRUb2tlbktleSgpIHsKICAgIHZhciBfcXVlcnkkZ2V0LCBfcXVlcnkkZ2V0MjsKCiAgICB2YXIgcXVlcnkgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpOwogICAgdmFyIGFwaUtleSA9IChfcXVlcnkkZ2V0ID0gcXVlcnkuZ2V0KCdrZXknKSkgIT09IG51bGwgJiYgX3F1ZXJ5JGdldCAhPT0gdm9pZCAwID8gX3F1ZXJ5JGdldCA6ICcnOwogICAgdmFyIGVkaXQgPSAoX3F1ZXJ5JGdldDIgPSBxdWVyeS5nZXQoJ2VkaXQnKSkgIT09IG51bGwgJiYgX3F1ZXJ5JGdldDIgIT09IHZvaWQgMCA/IF9xdWVyeSRnZXQyIDogJyc7CiAgICBzdG9yZS5jb21taXQoJ3N1cnZleS9zZXRUb2tlbicsIGFwaUtleSk7CiAgICBzdG9yZS5jb21taXQoJ3N1cnZleS9zZXRFZGl0TW9kZScsIGVkaXQpOwogIH0KCiAgZnVuY3Rpb24gdXBkYXRlRGF0YUxpc3RlbmVyKCkgewogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgaWYgKCFldmVudC5kYXRhLmlzV2lkZ2V0KSByZXR1cm47CgogICAgICBpZiAoZXZlbnQuZGF0YS5jdXN0b21lcikgewogICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LmRhdGEuY3VzdG9tZXIpOwogICAgICAgIHN0b3JlLmNvbW1pdCgnc3VydmV5L3NldEN1c3RvbWVyJywgZXZlbnQuZGF0YS5jdXN0b21lcik7CiAgICAgIH0KCiAgICAgIGlmIChldmVudC5kYXRhLmludGVyYWN0aW9uKSB7CiAgICAgICAgc3RvcmUuY29tbWl0KCdzdXJ2ZXkvc2V0SW50ZXJhY3Rpb24nLCBldmVudC5kYXRhLmludGVyYWN0aW9uKTsKICAgICAgfQogICAgfSk7CiAgfQoKICByZXR1cm4gewogICAgdXBkYXRlRGF0YUxpc3RlbmVyOiB1cGRhdGVEYXRhTGlzdGVuZXIsCiAgICBnZXRUb2tlbktleTogZ2V0VG9rZW5LZXkKICB9Owp9"},{"version":3,"sources":["/home/track/workplace/a2/frontend/widget/src/hooks/iframe.js"],"names":["store","useIframeControl","getTokenKey","query","URLSearchParams","window","location","search","apiKey","get","edit","commit","updateDataListener","addEventListener","event","data","isWidget","customer","console","log","interaction"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,UAAlB;AAEA,eAAe,SAASC,gBAAT,GAA6B;AACxC,WAASC,WAAT,GAAwB;AAAA;;AACpB,QAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAd;AACA,QAAMC,MAAM,iBAAGL,KAAK,CAACM,GAAN,CAAU,KAAV,CAAH,mDAAuB,EAAnC;AACA,QAAMC,IAAI,kBAAGP,KAAK,CAACM,GAAN,CAAU,MAAV,CAAH,qDAAwB,EAAlC;AACAT,IAAAA,KAAK,CAACW,MAAN,CAAa,iBAAb,EAAgCH,MAAhC;AACAR,IAAAA,KAAK,CAACW,MAAN,CAAa,oBAAb,EAAmCD,IAAnC;AACH;;AAED,WAASE,kBAAT,GAA+B;AAC3BP,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,SAAxB,EAAmC,UAACC,KAAD,EAAW;AAC1C,UAAI,CAACA,KAAK,CAACC,IAAN,CAAWC,QAAhB,EAA0B;;AAE1B,UAAIF,KAAK,CAACC,IAAN,CAAWE,QAAf,EAAyB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACC,IAAN,CAAWE,QAAvB;AACAjB,QAAAA,KAAK,CAACW,MAAN,CAAa,oBAAb,EAAmCG,KAAK,CAACC,IAAN,CAAWE,QAA9C;AACH;;AACD,UAAIH,KAAK,CAACC,IAAN,CAAWK,WAAf,EAA4B;AACxBpB,QAAAA,KAAK,CAACW,MAAN,CAAa,uBAAb,EAAsCG,KAAK,CAACC,IAAN,CAAWK,WAAjD;AACH;AACJ,KAVD;AAWH;;AAED,SAAO;AACHR,IAAAA,kBAAkB,EAAlBA,kBADG;AAEHV,IAAAA,WAAW,EAAXA;AAFG,GAAP;AAIH","sourcesContent":["import store from '../store'\n\nexport default function useIframeControl () {\n    function getTokenKey () {\n        const query = new URLSearchParams(window.location.search)\n        const apiKey = query.get('key') ?? ''\n        const edit = query.get('edit') ?? ''\n        store.commit('survey/setToken', apiKey)\n        store.commit('survey/setEditMode', edit)\n    }\n\n    function updateDataListener () {\n        window.addEventListener('message', (event) => {\n            if (!event.data.isWidget) return\n\n            if (event.data.customer) {\n                console.log(event.data.customer)\n                store.commit('survey/setCustomer', event.data.customer)\n            }\n            if (event.data.interaction) {\n                store.commit('survey/setInteraction', event.data.interaction)\n            }\n        })\n    }\n\n    return {\n        updateDataListener,\n        getTokenKey\n    }\n}"]}]}