{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/thread-loader/dist/cjs.js!/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js!/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/track/workplace/a2/frontend/widget/src/views/Widget/Widget.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/views/Widget/Widget.vue","mtime":1618498278418},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KaW1wb3J0IE11bHRpcGxlQ2hvaWNlIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvTXVsdGlwbGVDaG9pY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTXVsdGlwbGVDaG9pY2U6IE11bHRpcGxlQ2hvaWNlCiAgfSwKICBwcm9wczogewogICAgY29uZmlnOiBPYmplY3QKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFdpZGdldDogZnVuY3Rpb24gZ2V0V2lkZ2V0KCkge30KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICBjb25zb2xlLmxvZygnd2lkZ2V0IGtleScsIHRoaXMuY29uZmlnLmtleSk7CiAgfQp9Ow=="},{"version":3,"sources":["Widget.vue"],"names":[],"mappings":";;;;;AAMA,OAAA,cAAA,MAAA,iCAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,cAAA,EAAA;AAAA,GADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GAFA;AAKA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA,CAEA;AAHA,GALA;AAUA,EAAA,OAVA,qBAUA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,YAAA,EAAA,KAAA,MAAA,CAAA,GAAA;AACA;AAZA,CAAA","sourcesContent":["<template>\n  <div :class=\" config.appendTo ? 'widget-embebed' : 'widget-fixed'\"> Teste widget\n    <MultipleChoice />\n  </div>\n</template>\n<script>\nimport MultipleChoice from '../../components/MultipleChoice'\nexport default {\n  components: { MultipleChoice },\n  props: {\n    config: Object\n  },\n  methods: {\n    getWidget () {\n\n    }\n  },\n  created () {\n    console.log('widget key', this.config.key)\n  }\n}\n</script>\n<style scoped>\n.widget-fixed {\n  position: fixed;\n  bottom: 20px;\n  width: 450px;\n  max-height: 600px;\n  right: 0;\n  z-index: 99999;\n}\n.widget-embebed {\n  position: relative;\n  width: 450px;\n  max-height: 600px;\n}\n</style>"],"sourceRoot":"src/views/Widget"}]}