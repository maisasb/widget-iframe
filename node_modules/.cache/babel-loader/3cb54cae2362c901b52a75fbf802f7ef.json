{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js!/home/track/workplace/a2/frontend/widget/node_modules/eslint-loader/index.js??ref--13-0!/home/track/workplace/a2/frontend/widget/src/arch/widget/usecase.js","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/arch/widget/usecase.js","mtime":1618574375544},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS90cmFjay93b3JrcGxhY2UvYTIvZnJvbnRlbmQvd2lkZ2V0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2hvbWUvdHJhY2svd29ya3BsYWNlL2EyL2Zyb250ZW5kL3dpZGdldC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgV2lkZ2V0U2VydmljZSBmcm9tICcuL3NlcnZpY2UnOwppbXBvcnQgY29uc3RzIGZyb20gJy4uLy4uL2NvbnN0cyc7CmltcG9ydCBzdG9yZSBmcm9tICcuLi8uLi9zdG9yZSc7Ci8qKgogKiBTZXQgd2lkZ2V0U3RvcmFnZSBpbiBsb2NhbFN0b3JhZ2UKICogc2hvd19hdCA9IHRpbWVzdGFtcCB0aGF0IHdpZGdldCB3YXMgdmlldyBieSB1c2VyCiAqIGFuc3dlcmVkX2F0ID0gdGltZXN0YW1wIHRoYXQgdXNlciBhbnN3ZXIgdGhlIHdpZGdldAogKiBAcGFyYW0ge3dpZGdldFN0b3JhZ2V9IHdpZGdldFN0b3JhZ2UKICovCgp2YXIgc2V0U3RvcmFnZSA9IGZ1bmN0aW9uIHNldFN0b3JhZ2Uod2lkZ2V0U3RvcmFnZSkgewogIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHN0b3JlLnN0YXRlLnN1cnZleS50b2tlbiwgSlNPTi5zdHJpbmdpZnkod2lkZ2V0U3RvcmFnZSkpOwp9OwovKioKICogR2V0IHdpZGdldFN0b3JhZ2UgaW4gbG9jYWxTdG9yYWdlCiAqLwoKCnZhciBnZXRTdG9yYWdlID0gZnVuY3Rpb24gZ2V0U3RvcmFnZSgpIHsKICB2YXIgd2lkZ2V0U3RvcmFnZSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oc3RvcmUuc3RhdGUuc3VydmV5LnRva2VuKSk7CiAgcmV0dXJuIHdpZGdldFN0b3JhZ2U7Cn07Cgp2YXIgV2lkZ2V0VXNlQ2FzZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gV2lkZ2V0VXNlQ2FzZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBXaWRnZXRVc2VDYXNlKTsKICB9CgogIF9jcmVhdGVDbGFzcyhXaWRnZXRVc2VDYXNlLCBbewogICAga2V5OiAiZ2V0T25lIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRPbmUodG9rZW4pIHsKICAgICAgdmFyIHdpZGdldFNlcnZpY2UgPSBuZXcgV2lkZ2V0U2VydmljZSgpOwogICAgICByZXR1cm4gd2lkZ2V0U2VydmljZS5nZXRPbmUodG9rZW4pOwogICAgfQogIH0sIHsKICAgIGtleTogImNhblNob3ciLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNhblNob3cod2lkZ2V0KSB7CiAgICAgIHZhciB3aWRnZXRTdG9yYWdlID0gZ2V0U3RvcmFnZSgpOwoKICAgICAgaWYgKCF3aWRnZXRTdG9yYWdlKSB7CiAgICAgICAgLy8gRG9udCBoYXZlIHN0b3JhZ2Ugc2V0dGVkLCBzaG93IHdpZGdldAogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CgogICAgICBpZiAod2lkZ2V0LnNob3dfd2lkZ2V0ID09PSBjb25zdHMuU0hPV19XSURHRVQuT05DRSkgewogICAgICAgIC8vIElmIGhhdmUgc3RvcmFnZSBhbmQgaXMgc2V0dGVkLCBkb24ndCBzaG93IHdpZGdldAogICAgICAgIGlmICh3aWRnZXRTdG9yYWdlKSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAod2lkZ2V0LnNob3dfd2lkZ2V0ID09PSBjb25zdHMuU0hPV19XSURHRVQuUkVDVVJSRU5UTFkpIHsKICAgICAgICB2YXIgc2hvdyA9IGZhbHNlOwoKICAgICAgICBpZiAod2lkZ2V0U3RvcmFnZS5hbnN3ZXJlZF9hdCkgewogICAgICAgICAgLy8gQ2hlY2sgZGF5cyBvZiByZXNwb25zZSBpcyBtb3JlIHRoYW4gY29uZGl0aW9uCiAgICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKHdpZGdldFN0b3JhZ2UuYW5zd2VyZWRfYXQpOwogICAgICAgICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgd2lkZ2V0LmRheXNfYWZ0ZXJfcmVzcG9uc2UpOwoKICAgICAgICAgIGlmIChuZXcgRGF0ZSgpLmdldFRpbWUoKSA+PSBkYXRlLmdldFRpbWUoKSkgewogICAgICAgICAgICBzaG93ID0gdHJ1ZTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmICh3aWRnZXRTdG9yYWdlLnNob3dfYXQgJiYgIXdpZGdldFN0b3JhZ2UuYW5zd2VyZWRfYXQpIHsKICAgICAgICAgIC8vIENoZWNrIGRheXMgb2YgZGVjbGluZSBpcyBtb3JlIHRoYW4gY29uZGl0aW9uCiAgICAgICAgICB2YXIgX2RhdGUgPSBuZXcgRGF0ZSh3aWRnZXRTdG9yYWdlLnNob3dfYXQpOwoKICAgICAgICAgIF9kYXRlLnNldERhdGUoX2RhdGUuZ2V0RGF0ZSgpICsgd2lkZ2V0LmRheXNfYWZ0ZXJfZGVjbGluZSk7CgogICAgICAgICAgaWYgKG5ldyBEYXRlKCkuZ2V0VGltZSgpID49IF9kYXRlLmdldFRpbWUoKSkgewogICAgICAgICAgICBzaG93ID0gdHJ1ZTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiBzaG93OwogICAgICB9CgogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXRTaG93QXQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNldFNob3dBdCgpIHsKICAgICAgdmFyIHdpZGdldFN0b3JhZ2UgPSBnZXRTdG9yYWdlKCk7CgogICAgICBpZiAoIXdpZGdldFN0b3JhZ2UpIHsKICAgICAgICBzZXRTdG9yYWdlKHsKICAgICAgICAgIHNob3dfYXQ6IG5ldyBEYXRlKCkuZ2V0VGltZSgpCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJwb3N0T3BlbkNvdW50ZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHBvc3RPcGVuQ291bnRlcigpIHsKICAgICAgd2lkZ2V0U2VydmljZS5wb3N0T3BlbkNvdW50ZXIoKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBXaWRnZXRVc2VDYXNlOwp9KCk7CgpleHBvcnQgeyBXaWRnZXRVc2VDYXNlIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["/home/track/workplace/a2/frontend/widget/src/arch/widget/usecase.js"],"names":["WidgetService","consts","store","setStorage","widgetStorage","localStorage","setItem","state","survey","token","JSON","stringify","getStorage","parse","getItem","WidgetUseCase","widgetService","getOne","widget","show_widget","SHOW_WIDGET","ONCE","RECURRENTLY","show","answered_at","date","Date","setDate","getDate","days_after_response","getTime","show_at","days_after_decline","postOpenCounter"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,WAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,aAAD,EAAmB;AAClCC,EAAAA,YAAY,CAACC,OAAb,CAAqBJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,KAAxC,EAA+CC,IAAI,CAACC,SAAL,CAAeP,aAAf,CAA/C;AACH,CAFD;AAGA;AACA;AACA;;;AACA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,MAAMR,aAAa,GAAGM,IAAI,CAACG,KAAL,CAAWR,YAAY,CAACS,OAAb,CAAqBZ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,KAAxC,CAAX,CAAtB;AACA,SAAOL,aAAP;AACH,CAHD;;IAKqBW,a;;;;;;;WACjB,gBAAQN,KAAR,EAAe;AACX,UAAMO,aAAa,GAAG,IAAIhB,aAAJ,EAAtB;AACA,aAAOgB,aAAa,CAACC,MAAd,CAAqBR,KAArB,CAAP;AACH;;;WACD,iBAASS,MAAT,EAAiB;AACb,UAAMd,aAAa,GAAGQ,UAAU,EAAhC;;AACA,UAAI,CAACR,aAAL,EAAoB;AAChB;AACA,eAAO,IAAP;AACH;;AAED,UAAIc,MAAM,CAACC,WAAP,KAAuBlB,MAAM,CAACmB,WAAP,CAAmBC,IAA9C,EAAoD;AAChD;AACA,YAAIjB,aAAJ,EAAmB;AACf,iBAAO,KAAP;AACH;AACJ;;AAED,UAAIc,MAAM,CAACC,WAAP,KAAuBlB,MAAM,CAACmB,WAAP,CAAmBE,WAA9C,EAA2D;AACvD,YAAIC,IAAI,GAAG,KAAX;;AACA,YAAInB,aAAa,CAACoB,WAAlB,EAA+B;AAC3B;AACA,cAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAStB,aAAa,CAACoB,WAAvB,CAAX;AACAC,UAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBV,MAAM,CAACW,mBAArC;;AACA,cAAI,IAAIH,IAAJ,GAAWI,OAAX,MAAwBL,IAAI,CAACK,OAAL,EAA5B,EAA4C;AACxCP,YAAAA,IAAI,GAAG,IAAP;AACH;AACJ;;AACD,YAAInB,aAAa,CAAC2B,OAAd,IAAyB,CAAC3B,aAAa,CAACoB,WAA5C,EAAyD;AACrD;AACA,cAAIC,KAAI,GAAG,IAAIC,IAAJ,CAAStB,aAAa,CAAC2B,OAAvB,CAAX;;AACAN,UAAAA,KAAI,CAACE,OAAL,CAAaF,KAAI,CAACG,OAAL,KAAiBV,MAAM,CAACc,kBAArC;;AACA,cAAI,IAAIN,IAAJ,GAAWI,OAAX,MAAwBL,KAAI,CAACK,OAAL,EAA5B,EAA4C;AACxCP,YAAAA,IAAI,GAAG,IAAP;AACH;AACJ;;AACD,eAAOA,IAAP;AACH;;AACD,aAAO,IAAP;AACH;;;WACD,qBAAa;AACT,UAAMnB,aAAa,GAAGQ,UAAU,EAAhC;;AACA,UAAI,CAACR,aAAL,EAAoB;AAChBD,QAAAA,UAAU,CAAC;AAAE4B,UAAAA,OAAO,EAAE,IAAIL,IAAJ,GAAWI,OAAX;AAAX,SAAD,CAAV;AACH;AACJ;;;WACD,2BAAmB;AACfd,MAAAA,aAAa,CAACiB,eAAd;AACH;;;;;;SAjDgBlB,a","sourcesContent":["import WidgetService from './service'\nimport consts from '../../consts'\nimport store from '../../store'\n\n\n/**\n * Set widgetStorage in localStorage\n * show_at = timestamp that widget was view by user\n * answered_at = timestamp that user answer the widget\n * @param {widgetStorage} widgetStorage\n */\nconst setStorage = (widgetStorage) => {\n    localStorage.setItem(store.state.survey.token, JSON.stringify(widgetStorage))\n}\n/**\n * Get widgetStorage in localStorage\n */\nconst getStorage = () => {\n    const widgetStorage = JSON.parse(localStorage.getItem(store.state.survey.token))\n    return widgetStorage\n}\n\nexport default class WidgetUseCase {\n    getOne (token) {\n        const widgetService = new WidgetService()\n        return widgetService.getOne(token)\n    }\n    canShow (widget) {\n        const widgetStorage = getStorage()\n        if (!widgetStorage) {\n            // Dont have storage setted, show widget\n            return true\n        }\n\n        if (widget.show_widget === consts.SHOW_WIDGET.ONCE) {\n            // If have storage and is setted, don't show widget\n            if (widgetStorage) {\n                return false\n            }\n        }\n\n        if (widget.show_widget === consts.SHOW_WIDGET.RECURRENTLY) {\n            let show = false\n            if (widgetStorage.answered_at) {\n                // Check days of response is more than condition\n                let date = new Date(widgetStorage.answered_at)\n                date.setDate(date.getDate() + widget.days_after_response)\n                if (new Date().getTime() >= date.getTime()) {\n                    show = true\n                }\n            }\n            if (widgetStorage.show_at && !widgetStorage.answered_at) {\n                // Check days of decline is more than condition\n                let date = new Date(widgetStorage.show_at)\n                date.setDate(date.getDate() + widget.days_after_decline)\n                if (new Date().getTime() >= date.getTime()) {\n                    show = true\n                }\n            }\n            return show\n        }\n        return true\n    }\n    setShowAt () {\n        const widgetStorage = getStorage()\n        if (!widgetStorage) {\n            setStorage({ show_at: new Date().getTime() })\n        }\n    }\n    postOpenCounter () {\n        widgetService.postOpenCounter()\n    }\n}"]}]}