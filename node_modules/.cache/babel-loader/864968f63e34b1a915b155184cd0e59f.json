{"remainingRequest":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js!/home/track/workplace/a2/frontend/widget/node_modules/eslint-loader/index.js??ref--13-0!/home/track/workplace/a2/frontend/widget/src/arch/widget/service.js","dependencies":[{"path":"/home/track/workplace/a2/frontend/widget/src/arch/widget/service.js","mtime":1620908067435},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/track/workplace/a2/frontend/widget/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS90cmFjay93b3JrcGxhY2UvYTIvZnJvbnRlbmQvd2lkZ2V0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2hvbWUvdHJhY2svd29ya3BsYWNlL2EyL2Zyb250ZW5kL3dpZGdldC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgaHR0cCBmcm9tICcuLi8uLi91dGlscy9odHRwJzsKCnZhciBXaWRnZXRTZXJ2aWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBXaWRnZXRTZXJ2aWNlKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFdpZGdldFNlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFdpZGdldFNlcnZpY2UsIFt7CiAgICBrZXk6ICJnZXRPbmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldE9uZSh0b2tlbikgewogICAgICB2YXIgY29uZmlnID0gewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIHBhdGhuYW1lOiB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUKICAgICAgICB9CiAgICAgIH07CiAgICAgIHJldHVybiBodHRwLmdldCgnL3dpZGdldC8nICsgdG9rZW4sIGNvbmZpZyk7CiAgICB9CiAgfSwgewogICAga2V5OiAicG9zdE9wZW5Db3VudGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwb3N0T3BlbkNvdW50ZXIodG9rZW4pIHsKICAgICAgcmV0dXJuIGh0dHAucG9zdCgnL3dpZGdldC9zaG93LycgKyB0b2tlbik7CiAgICB9CiAgfSwgewogICAga2V5OiAicG9zdFBhcnRpYWxBbnN3ZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHBvc3RQYXJ0aWFsQW5zd2VyKHN1cnZleVB1YmxpY0hhcywgYW5zd2VycykgewogICAgICByZXR1cm4gaHR0cC5wb3N0KCcvc3VydmV5L3BhcnRpYWwvJyArIHN1cnZleVB1YmxpY0hhcywgYW5zd2Vycyk7CiAgICB9CiAgfSwgewogICAga2V5OiAicG9zdENvbXBsZXRlQW5zd2VyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBwb3N0Q29tcGxldGVBbnN3ZXIoc3VydmV5UHVibGljSGFzLCBhbnN3ZXJzKSB7CiAgICAgIHJldHVybiBodHRwLnBvc3QoJy9zdXJ2ZXkvJyArIHN1cnZleVB1YmxpY0hhcywgYW5zd2Vycyk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY2hlY2tDdXN0b21lclJlY3VycmVuY2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNoZWNrQ3VzdG9tZXJSZWN1cnJlbmNlKHRva2VuLCBjdXN0b21lcikgewogICAgICByZXR1cm4gaHR0cC5wb3N0KCcvd2lkZ2V0LycgKyB0b2tlbiArICcvY2hlY2snLCBjdXN0b21lcik7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gV2lkZ2V0U2VydmljZTsKfSgpOwoKZXhwb3J0IHsgV2lkZ2V0U2VydmljZSBhcyBkZWZhdWx0IH07"},{"version":3,"sources":["/home/track/workplace/a2/frontend/widget/src/arch/widget/service.js"],"names":["http","WidgetService","token","config","headers","pathname","window","location","get","post","surveyPublicHas","answers","customer"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,kBAAjB;;IAEqBC,a;;;;;;;WACnB,gBAAOC,KAAP,EAAc;AACZ,UAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACPC,UAAAA,QAAQ,EAAEC,MAAM,CAACC,QAAP,CAAgBF;AADnB;AADI,OAAf;AAKA,aAAOL,IAAI,CAACQ,GAAL,CAAS,aAAaN,KAAtB,EAA6BC,MAA7B,CAAP;AACD;;;WACD,yBAAgBD,KAAhB,EAAuB;AACrB,aAAOF,IAAI,CAACS,IAAL,CAAU,kBAAkBP,KAA5B,CAAP;AACD;;;WACD,2BAAkBQ,eAAlB,EAAmCC,OAAnC,EAA4C;AAC1C,aAAOX,IAAI,CAACS,IAAL,CAAU,qBAAqBC,eAA/B,EAAgDC,OAAhD,CAAP;AACD;;;WACD,4BAAmBD,eAAnB,EAAoCC,OAApC,EAA6C;AAC3C,aAAOX,IAAI,CAACS,IAAL,CAAU,aAAaC,eAAvB,EAAwCC,OAAxC,CAAP;AACD;;;WACD,iCAAwBT,KAAxB,EAA+BU,QAA/B,EAAyC;AACvC,aAAOZ,IAAI,CAACS,IAAL,CAAU,aAAaP,KAAb,GAAqB,QAA/B,EAAyCU,QAAzC,CAAP;AACD;;;;;;SApBkBX,a","sourcesContent":["import http from '../../utils/http'\n\nexport default class WidgetService {\n  getOne(token) {\n    const config = {\n      headers: {\n        pathname: window.location.pathname,\n      },\n    }\n    return http.get('/widget/' + token, config)\n  }\n  postOpenCounter(token) {\n    return http.post('/widget/show/' + token)\n  }\n  postPartialAnswer(surveyPublicHas, answers) {\n    return http.post('/survey/partial/' + surveyPublicHas, answers)\n  }\n  postCompleteAnswer(surveyPublicHas, answers) {\n    return http.post('/survey/' + surveyPublicHas, answers)\n  }\n  checkCustomerRecurrence(token, customer) {\n    return http.post('/widget/' + token + '/check', customer)\n  }\n}\n"]}]}